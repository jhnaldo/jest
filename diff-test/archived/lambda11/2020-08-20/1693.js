for ( let x in Symbol . hasInstance , '' ) ; x ( ) ; for ( let x ; ; ) ; var [ ... { } ] = x ; var x = { async x ( ... x ) { } } ; function x ( ... [ x , ] ) { ; switch ( x `${ '' }${ x }${ '' }` ) { case class extends x ?. x ?. x { } : for ( let x of '' ) ; try { } finally { } default : for ( { x , } in '' ) ; var x = '0' ; case { async * x ( ... [ x , ] ) { } } : for ( var x = '' ; ; '' ) ; } switch ( '' ) { case x : default : ; } for ( var x in '' ) ; }