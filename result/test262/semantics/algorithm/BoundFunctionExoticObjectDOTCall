[32mBoundFunctionExoticObjectDOTCall[0m
[32m- Inst: 21 / 21 (100.00%)[0m
[33m- Cond: 7944 / 6 (132400.00%)[0m
[32m+ 7237  [-]   : { ... }[0m
[32m+ 7238  [-]   : let target = F["BoundTargetFunction"][0m
[32m+ 7239  [-]   : let boundThis = F["BoundThis"][0m
[32m+ 7240  [-]   : let boundArgs = F["BoundArguments"][0m
[32m+ 7241  [-]   : let __x0__ = (copy-obj boundArgs)[0m
[32m+ 7242  [-]   : let __x1__ = argumentsList[0m
[32m+ 7243  [-]   : let __x2__ = 0i[0m
[32m+ 7244  [[32mT[0m/[32mT[0m[32m]: while (< __x2__ __x1__["length"]) { ... }[0m
[32m+ 7245  [-]   : { ... }[0m
[32m+ 7246  [-]   : let __x3__ = __x1__[__x2__][0m
[32m+ 7247  [-]   : append __x3__ -> __x0__[0m
[32m+ 7248  [-]   : __x2__ = (+ __x2__ 1i)[0m
[32m+ 7249  [-]   : let args = __x0__[0m
[32m+ 7250  [-]   : app __x4__ = (Call target boundThis args)[0m
[32m+ 7251  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x4__) ... else ...[0m
[32m+ 7252  [[32mT[0m/[32mT[0m[32m]: if (= __x4__["Type"] CONST_normal) ... else ...[0m
[32m+ 7253  [-]   : __x4__ = __x4__["Value"][0m
[32m+ 7254  [-]   : return __x4__[0m
[32m+ 7255  [-]   : {}[0m
[32m+ 7256  [-]   : app __x5__ = (WrapCompletion __x4__)[0m
[32m+ 7257  [-]   : return __x5__[0m
