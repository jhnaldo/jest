[32mAdditiveExpression1Evaluation0[0m
[32m- Inst: 85 / 85 (100.00%)[0m
[32m- Cond: 38 / 38 (100.00%)[0m
[32m+ 1086  [-]   : { ... }[0m
[32m+ 1087  [-]   : access __x0__ = (AdditiveExpression "Evaluation")[0m
[32m+ 1088  [-]   : let lref = __x0__[0m
[32m+ 1089  [-]   : app __x1__ = (GetValue lref)[0m
[32m+ 1090  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x1__) ... else ...[0m
[32m+ 1091  [[32mT[0m/[32mT[0m[32m]: if (= __x1__["Type"] CONST_normal) ... else ...[0m
[32m+ 1092  [-]   : __x1__ = __x1__["Value"][0m
[32m+ 1093  [-]   : return __x1__[0m
[32m+ 1094  [-]   : {}[0m
[32m+ 1095  [-]   : let lval = __x1__[0m
[32m+ 1096  [-]   : access __x2__ = (MultiplicativeExpression "Evaluation")[0m
[32m+ 1097  [-]   : let rref = __x2__[0m
[32m+ 1098  [-]   : app __x3__ = (GetValue rref)[0m
[32m+ 1099  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x3__) ... else ...[0m
[32m+ 1100  [[32mT[0m/[32mT[0m[32m]: if (= __x3__["Type"] CONST_normal) ... else ...[0m
[32m+ 1101  [-]   : __x3__ = __x3__["Value"][0m
[32m+ 1102  [-]   : return __x3__[0m
[32m+ 1103  [-]   : {}[0m
[32m+ 1104  [-]   : let rval = __x3__[0m
[32m+ 1105  [-]   : app __x4__ = (ToPrimitive lval)[0m
[32m+ 1106  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x4__) ... else ...[0m
[32m+ 1107  [[32mT[0m/[32mT[0m[32m]: if (= __x4__["Type"] CONST_normal) ... else ...[0m
[32m+ 1108  [-]   : __x4__ = __x4__["Value"][0m
[32m+ 1109  [-]   : return __x4__[0m
[32m+ 1110  [-]   : {}[0m
[32m+ 1111  [-]   : let lprim = __x4__[0m
[32m+ 1112  [-]   : app __x5__ = (ToPrimitive rval)[0m
[32m+ 1113  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x5__) ... else ...[0m
[32m+ 1114  [[32mT[0m/[32mT[0m[32m]: if (= __x5__["Type"] CONST_normal) ... else ...[0m
[32m+ 1115  [-]   : __x5__ = __x5__["Value"][0m
[32m+ 1116  [-]   : return __x5__[0m
[32m+ 1117  [-]   : {}[0m
[32m+ 1118  [-]   : let rprim = __x5__[0m
[32m+ 1119  [-]   : app __x6__ = (Type lprim)[0m
[32m+ 1120  [-]   : let __x7__ = (= __x6__ String)[0m
[32m+ 1121  [[32mT[0m/[32mT[0m[32m]: if __x7__ ... else ...[0m
[32m+ 1122  [-]   : {}[0m
[32m+ 1123  [-]   : { ... }[0m
[32m+ 1124  [-]   : app __x8__ = (Type rprim)[0m
[32m+ 1125  [-]   : __x7__ = (= __x8__ String)[0m
[32m+ 1126  [[32mT[0m/[32mT[0m[32m]: if __x7__ ... else ...[0m
[32m+ 1127  [-]   : { ... }[0m
[32m+ 1128  [-]   : app __x9__ = (ToString lprim)[0m
[32m+ 1129  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x9__) ... else ...[0m
[32m+ 1130  [[32mT[0m/[32mT[0m[32m]: if (= __x9__["Type"] CONST_normal) ... else ...[0m
[32m+ 1131  [-]   : __x9__ = __x9__["Value"][0m
[32m+ 1132  [-]   : return __x9__[0m
[32m+ 1133  [-]   : {}[0m
[32m+ 1134  [-]   : let lstr = __x9__[0m
[32m+ 1135  [-]   : app __x10__ = (ToString rprim)[0m
[32m+ 1136  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x10__) ... else ...[0m
[32m+ 1137  [[32mT[0m/[32mT[0m[32m]: if (= __x10__["Type"] CONST_normal) ... else ...[0m
[32m+ 1138  [-]   : __x10__ = __x10__["Value"][0m
[32m+ 1139  [-]   : return __x10__[0m
[32m+ 1140  [-]   : {}[0m
[32m+ 1141  [-]   : let rstr = __x10__[0m
[32m+ 1142  [-]   : app __x11__ = (WrapCompletion (+ lstr rstr))[0m
[32m+ 1143  [-]   : return __x11__[0m
[32m+ 1144  [-]   : {}[0m
[32m+ 1145  [-]   : app __x12__ = (ToNumeric lprim)[0m
[32m+ 1146  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x12__) ... else ...[0m
[32m+ 1147  [[32mT[0m/[32mT[0m[32m]: if (= __x12__["Type"] CONST_normal) ... else ...[0m
[32m+ 1148  [-]   : __x12__ = __x12__["Value"][0m
[32m+ 1149  [-]   : return __x12__[0m
[32m+ 1150  [-]   : {}[0m
[32m+ 1151  [-]   : let lnum = __x12__[0m
[32m+ 1152  [-]   : app __x13__ = (ToNumeric rprim)[0m
[32m+ 1153  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x13__) ... else ...[0m
[32m+ 1154  [[32mT[0m/[32mT[0m[32m]: if (= __x13__["Type"] CONST_normal) ... else ...[0m
[32m+ 1155  [-]   : __x13__ = __x13__["Value"][0m
[32m+ 1156  [-]   : return __x13__[0m
[32m+ 1157  [-]   : {}[0m
[32m+ 1158  [-]   : let rnum = __x13__[0m
[32m+ 1159  [-]   : app __x14__ = (Type lnum)[0m
[32m+ 1160  [-]   : app __x15__ = (Type rnum)[0m
[32m+ 1161  [[32mT[0m/[32mT[0m[32m]: if (! (= __x14__ __x15__)) ... else ...[0m
[32m+ 1162  [-]   : { ... }[0m
[32m+ 1163  [-]   : app __x16__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[32m+ 1164  [-]   : return __x16__[0m
[32m+ 1165  [-]   : {}[0m
[32m+ 1166  [-]   : app __x17__ = (Type lnum)[0m
[32m+ 1167  [-]   : let T = __x17__[0m
[32m+ 1168  [-]   : app __x18__ = (PRIMITIVES[T]["add"] lnum rnum)[0m
[32m+ 1169  [-]   : app __x19__ = (WrapCompletion __x18__)[0m
[32m+ 1170  [-]   : return __x19__[0m
