[33mStringExoticObjectDOTOwnPropertyKeys[0m
[33m- Inst: 64 / 71 (90.14%)[0m
[33m- Cond: 19 / 26 (73.08%)[0m
[32m+ 27575 [-]   : { ... }[0m
[32m+ 27576 [-]   : let keys = (new [])[0m
[32m+ 27577 [-]   : let str = O["StringData"][0m
[32m+ 27578 [-]   : app __x0__ = (Type str)[0m
[32m+ 27579 [-]   : assert (= __x0__ String)[0m
[32m+ 27580 [-]   : let len = str["length"][0m
[32m+ 27581 [-]   : let i = 0i[0m
[32m+ 27582 [[32mT[0m/[32mT[0m[32m]: while (< i len) { ... }[0m
[32m+ 27583 [-]   : { ... }[0m
[32m+ 27584 [-]   : app iStr = (ToString i)[0m
[32m+ 27585 [[31mF[0m/[32mT[0m[32m]: if (is-completion iStr) ... else ...[0m
[32m+ 27586 [-]   : iStr = iStr["Value"][0m
[32m+ 27587 [-]   : {}[0m
[32m+ 27588 [-]   : append iStr -> keys[0m
[32m+ 27589 [-]   : i = (+ i 1i)[0m
[32m+ 27590 [-]   : i = 0i[0m
[32m+ 27591 [-]   : let list = (map-keys O["SubMap"])[0m
[32m+ 27592 [-]   : let arrayIndexKeys = (new [])[0m
[32m+ 27593 [-]   : let stringKeys = (new [])[0m
[32m+ 27594 [-]   : let symbolKeys = (new [])[0m
[32m+ 27595 [-]   : len = list["length"][0m
[32m+ 27596 [[32mT[0m/[32mT[0m[32m]: while (< i len) { ... }[0m
[32m+ 27597 [-]   : { ... }[0m
[32m+ 27598 [-]   : let P = list[i][0m
[32m+ 27599 [-]   : app T = (Type P)[0m
[32m+ 27600 [[32mT[0m/[32mT[0m[32m]: if (= T "String") ... else ...[0m
[32m+ 27601 [-]   : { ... }[0m
[32m+ 27602 [-]   : app isArrayIndex = (IsArrayIndex P)[0m
[32m+ 27603 [[32mT[0m/[32mT[0m[32m]: if isArrayIndex ... else ...[0m
[32m+ 27604 [-]   : { ... }[0m
[32m+ 27605 [-]   : app n = (ToInteger P)[0m
[32m+ 27606 [[32mT[0m/[31mF[0m[32m]: if (is-completion n) ... else ...[0m
[32m+ 27607 [-]   : n = n["Value"][0m
[31m- 27608 [-]   : {}[0m
[32m+ 27609 [[32mT[0m/[31mF[0m[32m]: if (! (< n str["length"])) ... else ...[0m
[32m+ 27610 [-]   : append n -> arrayIndexKeys[0m
[31m- 27611 [-]   : {}[0m
[32m+ 27612 [-]   : append P -> stringKeys[0m
[32m+ 27613 [-]   : append P -> symbolKeys[0m
[32m+ 27614 [-]   : i = (+ i 1i)[0m
[32m+ 27615 [-]   : len = arrayIndexKeys["length"][0m
[32m+ 27616 [[32mT[0m/[32mT[0m[32m]: while (< 0i len) { ... }[0m
[32m+ 27617 [-]   : { ... }[0m
[32m+ 27618 [-]   : let min = 0i[0m
[32m+ 27619 [-]   : let j = 1i[0m
[32m+ 27620 [[31mF[0m/[32mT[0m[32m]: while (< j len) { ... }[0m
[31m- 27621 [-]   : { ... }[0m
[31m- 27622 [-]   : if (< arrayIndexKeys[j] arrayIndexKeys[min]) ... else ...[0m
[31m- 27623 [-]   : min = j[0m
[31m- 27624 [-]   : {}[0m
[31m- 27625 [-]   : j = (+ j 1i)[0m
[32m+ 27626 [-]   : app P = (ToString (pop arrayIndexKeys min))[0m
[32m+ 27627 [[31mF[0m/[32mT[0m[32m]: if (is-completion P) ... else ...[0m
[32m+ 27628 [-]   : P = P["Value"][0m
[32m+ 27629 [-]   : {}[0m
[32m+ 27630 [-]   : append P -> keys[0m
[32m+ 27631 [-]   : len = (- len 1i)[0m
[32m+ 27632 [-]   : i = 0i[0m
[32m+ 27633 [-]   : len = stringKeys["length"][0m
[32m+ 27634 [[32mT[0m/[32mT[0m[32m]: while (< i len) { ... }[0m
[32m+ 27635 [-]   : { ... }[0m
[32m+ 27636 [-]   : append stringKeys[i] -> keys[0m
[32m+ 27637 [-]   : i = (+ i 1i)[0m
[32m+ 27638 [-]   : i = 0i[0m
[32m+ 27639 [-]   : len = symbolKeys["length"][0m
[32m+ 27640 [[32mT[0m/[32mT[0m[32m]: while (< i len) { ... }[0m
[32m+ 27641 [-]   : { ... }[0m
[32m+ 27642 [-]   : append symbolKeys[i] -> keys[0m
[32m+ 27643 [-]   : i = (+ i 1i)[0m
[32m+ 27644 [-]   : app __x1__ = (WrapCompletion keys)[0m
[32m+ 27645 [-]   : return __x1__[0m
