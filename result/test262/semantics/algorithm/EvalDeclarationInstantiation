[33mEvalDeclarationInstantiation[0m
[33m- Inst: 139 / 235 (59.15%)[0m
[33m- Cond: 7944 / 102 (7788.24%)[0m
[32m+ 9653  [-]   : { ... }[0m
[32m+ 9654  [-]   : access __x0__ = (body "VarDeclaredNames")[0m
[32m+ 9655  [-]   : let varNames = __x0__[0m
[32m+ 9656  [-]   : access __x1__ = (body "VarScopedDeclarations")[0m
[32m+ 9657  [-]   : let varDeclarations = __x1__[0m
[32m+ 9658  [-]   : let lexEnvRec = lexEnv["EnvironmentRecord"][0m
[32m+ 9659  [-]   : let varEnvRec = varEnv["EnvironmentRecord"][0m
[32m+ 9660  [[31mF[0m/[32mT[0m[32m]: if (= strict false) ... else ...[0m
[31m- 9661  [-]   : { ... }[0m
[31m- 9662  [-]   : if (= (typeof varEnvRec) "GlobalEnvironmentRecord") ... else ...[0m
[31m- 9663  [-]   : { ... }[0m
[31m- 9664  [-]   : let __x2__ = varNames[0m
[31m- 9665  [-]   : let __x3__ = 0i[0m
[31m- 9666  [-]   : while (< __x3__ __x2__["length"]) { ... }[0m
[31m- 9667  [-]   : { ... }[0m
[31m- 9668  [-]   : let name = __x2__[__x3__][0m
[31m- 9669  [-]   : app __x4__ = (varEnvRec["HasLexicalDeclaration"] varEnvRec name)[0m
[31m- 9670  [-]   : if (= __x4__ true) ... else ...[0m
[31m- 9671  [-]   : { ... }[0m
[31m- 9672  [-]   : app __x5__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 9673  [-]   : return __x5__[0m
[31m- 9674  [-]   : {}[0m
[31m- 9675  [-]   : __x3__ = (+ __x3__ 1i)[0m
[31m- 9676  [-]   : {}[0m
[31m- 9677  [-]   : let thisLex = lexEnv[0m
[31m- 9678  [-]   : while (! (= thisLex varEnv)) { ... }[0m
[31m- 9679  [-]   : { ... }[0m
[31m- 9680  [-]   : let thisEnvRec = thisLex["EnvironmentRecord"][0m
[31m- 9681  [-]   : if (! (= (typeof thisEnvRec) "ObjectEnvironmentRecord")) ... else ...[0m
[31m- 9682  [-]   : { ... }[0m
[31m- 9683  [-]   : let __x6__ = varNames[0m
[31m- 9684  [-]   : let __x7__ = 0i[0m
[31m- 9685  [-]   : while (< __x7__ __x6__["length"]) { ... }[0m
[31m- 9686  [-]   : { ... }[0m
[31m- 9687  [-]   : let name = __x6__[__x7__][0m
[31m- 9688  [-]   : app __x8__ = (thisEnvRec["HasBinding"] thisEnvRec name)[0m
[31m- 9689  [-]   : if (= __x8__ true) ... else ...[0m
[31m- 9690  [-]   : { ... }[0m
[31m- 9691  [-]   : app __x9__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 9692  [-]   : return __x9__[0m
[31m- 9693  [-]   : {}[0m
[31m- 9694  [-]   : __x7__ = (+ __x7__ 1i)[0m
[31m- 9695  [-]   : {}[0m
[31m- 9696  [-]   : thisLex = thisLex["Outer"][0m
[32m+ 9697  [-]   : {}[0m
[32m+ 9698  [-]   : let functionsToInitialize = (new [])[0m
[32m+ 9699  [-]   : let declaredFunctionNames = (new [])[0m
[32m+ 9700  [-]   : let __x10__ = varDeclarations[0m
[32m+ 9701  [-]   : let __x11__ = __x10__["length"][0m
[32m+ 9702  [[32mT[0m/[32mT[0m[32m]: while (< 0i __x11__) { ... }[0m
[32m+ 9703  [-]   : { ... }[0m
[32m+ 9704  [-]   : __x11__ = (- __x11__ 1i)[0m
[32m+ 9705  [-]   : let d = __x10__[__x11__][0m
[32m+ 9706  [[32mT[0m/[32mT[0m[32m]: if (! (|| (|| (is-instance-of d VariableDeclaration) (is-instance-of d ForBinding)) (is-instance-of d BindingIdentifier))) ... else ...[0m
[32m+ 9707  [-]   : { ... }[0m
[32m+ 9708  [-]   : assert (|| (|| (|| (is-instance-of d FunctionDeclaration) (is-instance-of d GeneratorDeclaration)) (is-instance-of d AsyncFunctionDeclaration)) (is-instance-of d AsyncGeneratorDeclaration))[0m
[32m+ 9709  [-]   : access __x12__ = (d "BoundNames")[0m
[32m+ 9710  [-]   : let fn = __x12__[0i][0m
[32m+ 9711  [[32mT[0m/[31mF[0m[32m]: if (! (contains declaredFunctionNames fn)) ... else ...[0m
[32m+ 9712  [-]   : { ... }[0m
[32m+ 9713  [[31mF[0m/[32mT[0m[32m]: if (= (typeof varEnvRec) "GlobalEnvironmentRecord") ... else ...[0m
[31m- 9714  [-]   : { ... }[0m
[31m- 9715  [-]   : app __x13__ = (varEnvRec["CanDeclareGlobalFunction"] varEnvRec fn)[0m
[31m- 9716  [-]   : if (is-completion __x13__) ... else ...[0m
[31m- 9717  [-]   : if (= __x13__["Type"] CONST_normal) ... else ...[0m
[31m- 9718  [-]   : __x13__ = __x13__["Value"][0m
[31m- 9719  [-]   : return __x13__[0m
[31m- 9720  [-]   : {}[0m
[31m- 9721  [-]   : let fnDefinable = __x13__[0m
[31m- 9722  [-]   : if (= fnDefinable false) ... else ...[0m
[31m- 9723  [-]   : { ... }[0m
[31m- 9724  [-]   : app __x14__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 9725  [-]   : return __x14__[0m
[31m- 9726  [-]   : {}[0m
[32m+ 9727  [-]   : {}[0m
[32m+ 9728  [-]   : append fn -> declaredFunctionNames[0m
[32m+ 9729  [-]   : prepend d -> functionsToInitialize[0m
[31m- 9730  [-]   : {}[0m
[32m+ 9731  [-]   : {}[0m
[32m+ 9732  [-]   : let declaredVarNames = (new [])[0m
[32m+ 9733  [-]   : let __x15__ = varDeclarations[0m
[32m+ 9734  [-]   : let __x16__ = 0i[0m
[32m+ 9735  [[32mT[0m/[32mT[0m[32m]: while (< __x16__ __x15__["length"]) { ... }[0m
[32m+ 9736  [-]   : { ... }[0m
[32m+ 9737  [-]   : let d = __x15__[__x16__][0m
[32m+ 9738  [[32mT[0m/[32mT[0m[32m]: if (|| (|| (is-instance-of d VariableDeclaration) (is-instance-of d ForBinding)) (is-instance-of d BindingIdentifier)) ... else ...[0m
[32m+ 9739  [-]   : { ... }[0m
[32m+ 9740  [-]   : access __x17__ = (d "BoundNames")[0m
[32m+ 9741  [-]   : let __x18__ = __x17__[0m
[32m+ 9742  [-]   : let __x19__ = 0i[0m
[32m+ 9743  [[32mT[0m/[32mT[0m[32m]: while (< __x19__ __x18__["length"]) { ... }[0m
[32m+ 9744  [-]   : { ... }[0m
[32m+ 9745  [-]   : let vn = __x18__[__x19__][0m
[32m+ 9746  [[32mT[0m/[31mF[0m[32m]: if (! (contains declaredFunctionNames vn)) ... else ...[0m
[32m+ 9747  [-]   : { ... }[0m
[32m+ 9748  [[31mF[0m/[32mT[0m[32m]: if (= (typeof varEnvRec) "GlobalEnvironmentRecord") ... else ...[0m
[31m- 9749  [-]   : { ... }[0m
[31m- 9750  [-]   : app __x20__ = (varEnvRec["CanDeclareGlobalVar"] varEnvRec vn)[0m
[31m- 9751  [-]   : if (is-completion __x20__) ... else ...[0m
[31m- 9752  [-]   : if (= __x20__["Type"] CONST_normal) ... else ...[0m
[31m- 9753  [-]   : __x20__ = __x20__["Value"][0m
[31m- 9754  [-]   : return __x20__[0m
[31m- 9755  [-]   : {}[0m
[31m- 9756  [-]   : let vnDefinable = __x20__[0m
[31m- 9757  [-]   : if (= vnDefinable false) ... else ...[0m
[31m- 9758  [-]   : { ... }[0m
[31m- 9759  [-]   : app __x21__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 9760  [-]   : return __x21__[0m
[31m- 9761  [-]   : {}[0m
[32m+ 9762  [-]   : {}[0m
[32m+ 9763  [[32mT[0m/[31mF[0m[32m]: if (! (contains declaredVarNames vn)) ... else ...[0m
[32m+ 9764  [-]   : append vn -> declaredVarNames[0m
[31m- 9765  [-]   : {}[0m
[31m- 9766  [-]   : {}[0m
[32m+ 9767  [-]   : __x19__ = (+ __x19__ 1i)[0m
[32m+ 9768  [-]   : {}[0m
[32m+ 9769  [-]   : __x16__ = (+ __x16__ 1i)[0m
[32m+ 9770  [-]   : access __x22__ = (body "LexicallyScopedDeclarations")[0m
[32m+ 9771  [-]   : let lexDeclarations = __x22__[0m
[32m+ 9772  [-]   : let __x23__ = lexDeclarations[0m
[32m+ 9773  [-]   : let __x24__ = 0i[0m
[32m+ 9774  [[32mT[0m/[32mT[0m[32m]: while (< __x24__ __x23__["length"]) { ... }[0m
[32m+ 9775  [-]   : { ... }[0m
[32m+ 9776  [-]   : let d = __x23__[__x24__][0m
[32m+ 9777  [-]   : access __x25__ = (d "BoundNames")[0m
[32m+ 9778  [-]   : let __x26__ = __x25__[0m
[32m+ 9779  [-]   : let __x27__ = 0i[0m
[32m+ 9780  [[32mT[0m/[32mT[0m[32m]: while (< __x27__ __x26__["length"]) { ... }[0m
[32m+ 9781  [-]   : { ... }[0m
[32m+ 9782  [-]   : let dn = __x26__[__x27__][0m
[32m+ 9783  [-]   : access __x28__ = (d "IsConstantDeclaration")[0m
[32m+ 9784  [[32mT[0m/[32mT[0m[32m]: if (= __x28__ true) ... else ...[0m
[32m+ 9785  [-]   : { ... }[0m
[32m+ 9786  [-]   : app __x29__ = (lexEnvRec["CreateImmutableBinding"] lexEnvRec dn true)[0m
[32m+ 9787  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x29__) ... else ...[0m
[32m+ 9788  [[32mT[0m/[31mF[0m[32m]: if (= __x29__["Type"] CONST_normal) ... else ...[0m
[32m+ 9789  [-]   : __x29__ = __x29__["Value"][0m
[31m- 9790  [-]   : return __x29__[0m
[32m+ 9791  [-]   : {}[0m
[32m+ 9792  [-]   : __x29__[0m
[32m+ 9793  [-]   : { ... }[0m
[32m+ 9794  [-]   : app __x30__ = (lexEnvRec["CreateMutableBinding"] lexEnvRec dn false)[0m
[32m+ 9795  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x30__) ... else ...[0m
[32m+ 9796  [[32mT[0m/[31mF[0m[32m]: if (= __x30__["Type"] CONST_normal) ... else ...[0m
[32m+ 9797  [-]   : __x30__ = __x30__["Value"][0m
[31m- 9798  [-]   : return __x30__[0m
[32m+ 9799  [-]   : {}[0m
[32m+ 9800  [-]   : __x30__[0m
[32m+ 9801  [-]   : __x27__ = (+ __x27__ 1i)[0m
[32m+ 9802  [-]   : __x24__ = (+ __x24__ 1i)[0m
[32m+ 9803  [-]   : let __x31__ = functionsToInitialize[0m
[32m+ 9804  [-]   : let __x32__ = 0i[0m
[32m+ 9805  [[32mT[0m/[32mT[0m[32m]: while (< __x32__ __x31__["length"]) { ... }[0m
[32m+ 9806  [-]   : { ... }[0m
[32m+ 9807  [-]   : let f = __x31__[__x32__][0m
[32m+ 9808  [-]   : access __x33__ = (f "BoundNames")[0m
[32m+ 9809  [-]   : let fn = __x33__[0i][0m
[32m+ 9810  [-]   : access __x34__ = (f "InstantiateFunctionObject")[0m
[32m+ 9811  [-]   : app __x35__ = (__x34__ lexEnv)[0m
[32m+ 9812  [-]   : let fo = __x35__[0m
[32m+ 9813  [[31mF[0m/[32mT[0m[32m]: if (= (typeof varEnvRec) "GlobalEnvironmentRecord") ... else ...[0m
[31m- 9814  [-]   : { ... }[0m
[31m- 9815  [-]   : app __x36__ = (varEnvRec["CreateGlobalFunctionBinding"] varEnvRec fn fo true)[0m
[31m- 9816  [-]   : if (is-completion __x36__) ... else ...[0m
[31m- 9817  [-]   : if (= __x36__["Type"] CONST_normal) ... else ...[0m
[31m- 9818  [-]   : __x36__ = __x36__["Value"][0m
[31m- 9819  [-]   : return __x36__[0m
[31m- 9820  [-]   : {}[0m
[31m- 9821  [-]   : __x36__[0m
[32m+ 9822  [-]   : { ... }[0m
[32m+ 9823  [-]   : app __x37__ = (varEnvRec["HasBinding"] varEnvRec fn)[0m
[32m+ 9824  [-]   : let bindingExists = __x37__[0m
[32m+ 9825  [[32mT[0m/[31mF[0m[32m]: if (= bindingExists false) ... else ...[0m
[32m+ 9826  [-]   : { ... }[0m
[32m+ 9827  [-]   : app __x38__ = (varEnvRec["CreateMutableBinding"] varEnvRec fn true)[0m
[32m+ 9828  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x38__) ... else ...[0m
[32m+ 9829  [[32mT[0m/[31mF[0m[32m]: if (= __x38__["Type"] CONST_normal) ... else ...[0m
[32m+ 9830  [-]   : __x38__ = __x38__["Value"][0m
[31m- 9831  [-]   : return __x38__[0m
[32m+ 9832  [-]   : {}[0m
[32m+ 9833  [-]   : let status = __x38__[0m
[32m+ 9834  [-]   : app __x39__ = (varEnvRec["InitializeBinding"] varEnvRec fn fo)[0m
[32m+ 9835  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x39__) ... else ...[0m
[32m+ 9836  [[32mT[0m/[31mF[0m[32m]: if (= __x39__["Type"] CONST_normal) ... else ...[0m
[32m+ 9837  [-]   : __x39__ = __x39__["Value"][0m
[31m- 9838  [-]   : return __x39__[0m
[32m+ 9839  [-]   : {}[0m
[32m+ 9840  [-]   : __x39__[0m
[31m- 9841  [-]   : { ... }[0m
[31m- 9842  [-]   : app __x40__ = (varEnvRec["SetMutableBinding"] varEnvRec fn fo false)[0m
[31m- 9843  [-]   : if (is-completion __x40__) ... else ...[0m
[31m- 9844  [-]   : if (= __x40__["Type"] CONST_normal) ... else ...[0m
[31m- 9845  [-]   : __x40__ = __x40__["Value"][0m
[31m- 9846  [-]   : return __x40__[0m
[31m- 9847  [-]   : {}[0m
[31m- 9848  [-]   : __x40__[0m
[32m+ 9849  [-]   : __x32__ = (+ __x32__ 1i)[0m
[32m+ 9850  [-]   : let __x41__ = declaredVarNames[0m
[32m+ 9851  [-]   : let __x42__ = 0i[0m
[32m+ 9852  [[32mT[0m/[32mT[0m[32m]: while (< __x42__ __x41__["length"]) { ... }[0m
[32m+ 9853  [-]   : { ... }[0m
[32m+ 9854  [-]   : let vn = __x41__[__x42__][0m
[32m+ 9855  [[31mF[0m/[32mT[0m[32m]: if (= (typeof varEnvRec) "GlobalEnvironmentRecord") ... else ...[0m
[31m- 9856  [-]   : { ... }[0m
[31m- 9857  [-]   : app __x43__ = (varEnvRec["CreateGlobalVarBinding"] varEnvRec vn true)[0m
[31m- 9858  [-]   : if (is-completion __x43__) ... else ...[0m
[31m- 9859  [-]   : if (= __x43__["Type"] CONST_normal) ... else ...[0m
[31m- 9860  [-]   : __x43__ = __x43__["Value"][0m
[31m- 9861  [-]   : return __x43__[0m
[31m- 9862  [-]   : {}[0m
[31m- 9863  [-]   : __x43__[0m
[32m+ 9864  [-]   : { ... }[0m
[32m+ 9865  [-]   : app __x44__ = (varEnvRec["HasBinding"] varEnvRec vn)[0m
[32m+ 9866  [-]   : let bindingExists = __x44__[0m
[32m+ 9867  [[32mT[0m/[31mF[0m[32m]: if (= bindingExists false) ... else ...[0m
[32m+ 9868  [-]   : { ... }[0m
[32m+ 9869  [-]   : app __x45__ = (varEnvRec["CreateMutableBinding"] varEnvRec vn true)[0m
[32m+ 9870  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x45__) ... else ...[0m
[32m+ 9871  [[32mT[0m/[31mF[0m[32m]: if (= __x45__["Type"] CONST_normal) ... else ...[0m
[32m+ 9872  [-]   : __x45__ = __x45__["Value"][0m
[31m- 9873  [-]   : return __x45__[0m
[32m+ 9874  [-]   : {}[0m
[32m+ 9875  [-]   : let status = __x45__[0m
[32m+ 9876  [-]   : app __x46__ = (varEnvRec["InitializeBinding"] varEnvRec vn undefined)[0m
[32m+ 9877  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x46__) ... else ...[0m
[32m+ 9878  [[32mT[0m/[31mF[0m[32m]: if (= __x46__["Type"] CONST_normal) ... else ...[0m
[32m+ 9879  [-]   : __x46__ = __x46__["Value"][0m
[31m- 9880  [-]   : return __x46__[0m
[32m+ 9881  [-]   : {}[0m
[32m+ 9882  [-]   : __x46__[0m
[31m- 9883  [-]   : {}[0m
[32m+ 9884  [-]   : __x42__ = (+ __x42__ 1i)[0m
[32m+ 9885  [-]   : app __x47__ = (NormalCompletion CONST_empty)[0m
[32m+ 9886  [-]   : app __x48__ = (WrapCompletion __x47__)[0m
[32m+ 9887  [-]   : return __x48__[0m
