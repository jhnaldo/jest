[33mAbstractRelationalComparison[0m
[33m- Inst: 132 / 134 (98.51%)[0m
[33m- Cond: 7944 / 60 (13240.00%)[0m
[32m+ 4008  [-]   : { ... }[0m
[32m+ 4009  [[32mT[0m/[32mT[0m[32m]: if (= LeftFirst absent) ... else ...[0m
[32m+ 4010  [-]   : let LeftFirst = true[0m
[32m+ 4011  [-]   : {}[0m
[32m+ 4012  [[32mT[0m/[32mT[0m[32m]: if (= LeftFirst true) ... else ...[0m
[32m+ 4013  [-]   : { ... }[0m
[32m+ 4014  [-]   : app __x0__ = (ToPrimitive x Number)[0m
[32m+ 4015  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x0__) ... else ...[0m
[32m+ 4016  [[32mT[0m/[32mT[0m[32m]: if (= __x0__["Type"] CONST_normal) ... else ...[0m
[32m+ 4017  [-]   : __x0__ = __x0__["Value"][0m
[32m+ 4018  [-]   : return __x0__[0m
[32m+ 4019  [-]   : {}[0m
[32m+ 4020  [-]   : let px = __x0__[0m
[32m+ 4021  [-]   : app __x1__ = (ToPrimitive y Number)[0m
[32m+ 4022  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x1__) ... else ...[0m
[32m+ 4023  [[32mT[0m/[32mT[0m[32m]: if (= __x1__["Type"] CONST_normal) ... else ...[0m
[32m+ 4024  [-]   : __x1__ = __x1__["Value"][0m
[32m+ 4025  [-]   : return __x1__[0m
[32m+ 4026  [-]   : {}[0m
[32m+ 4027  [-]   : let py = __x1__[0m
[32m+ 4028  [-]   : { ... }[0m
[32m+ 4029  [-]   : app __x2__ = (ToPrimitive y Number)[0m
[32m+ 4030  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x2__) ... else ...[0m
[32m+ 4031  [[32mT[0m/[32mT[0m[32m]: if (= __x2__["Type"] CONST_normal) ... else ...[0m
[32m+ 4032  [-]   : __x2__ = __x2__["Value"][0m
[32m+ 4033  [-]   : return __x2__[0m
[32m+ 4034  [-]   : {}[0m
[32m+ 4035  [-]   : let py = __x2__[0m
[32m+ 4036  [-]   : app __x3__ = (ToPrimitive x Number)[0m
[32m+ 4037  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x3__) ... else ...[0m
[32m+ 4038  [[32mT[0m/[32mT[0m[32m]: if (= __x3__["Type"] CONST_normal) ... else ...[0m
[32m+ 4039  [-]   : __x3__ = __x3__["Value"][0m
[32m+ 4040  [-]   : return __x3__[0m
[32m+ 4041  [-]   : {}[0m
[32m+ 4042  [-]   : let px = __x3__[0m
[32m+ 4043  [-]   : app __x4__ = (Type px)[0m
[32m+ 4044  [-]   : let __x5__ = (= __x4__ String)[0m
[32m+ 4045  [[32mT[0m/[32mT[0m[32m]: if __x5__ ... else ...[0m
[32m+ 4046  [-]   : { ... }[0m
[32m+ 4047  [-]   : app __x6__ = (Type py)[0m
[32m+ 4048  [-]   : __x5__ = (= __x6__ String)[0m
[32m+ 4049  [-]   : {}[0m
[32m+ 4050  [[32mT[0m/[32mT[0m[32m]: if __x5__ ... else ...[0m
[32m+ 4051  [-]   : return (< px py)[0m
[32m+ 4052  [-]   : { ... }[0m
[32m+ 4053  [-]   : app __x7__ = (Type px)[0m
[32m+ 4054  [-]   : let __x8__ = (= __x7__ BigInt)[0m
[32m+ 4055  [[32mT[0m/[32mT[0m[32m]: if __x8__ ... else ...[0m
[32m+ 4056  [-]   : { ... }[0m
[32m+ 4057  [-]   : app __x9__ = (Type py)[0m
[32m+ 4058  [-]   : __x8__ = (= __x9__ String)[0m
[32m+ 4059  [-]   : {}[0m
[32m+ 4060  [[32mT[0m/[32mT[0m[32m]: if __x8__ ... else ...[0m
[32m+ 4061  [-]   : { ... }[0m
[32m+ 4062  [-]   : app __x10__ = (StringToBigInt py)[0m
[32m+ 4063  [[31mF[0m/[32mT[0m[32m]: if (is-completion __x10__) ... else ...[0m
[32m+ 4064  [[32mT[0m/[31mF[0m[32m]: if (= __x10__["Type"] CONST_normal) ... else ...[0m
[32m+ 4065  [-]   : __x10__ = __x10__["Value"][0m
[31m- 4066  [-]   : return __x10__[0m
[32m+ 4067  [-]   : {}[0m
[32m+ 4068  [-]   : let ny = __x10__[0m
[32m+ 4069  [[32mT[0m/[32mT[0m[32m]: if (= ny NaN) ... else ...[0m
[32m+ 4070  [-]   : { ... }[0m
[32m+ 4071  [-]   : app __x11__ = (WrapCompletion undefined)[0m
[32m+ 4072  [-]   : return __x11__[0m
[32m+ 4073  [-]   : {}[0m
[32m+ 4074  [-]   : app result = (PRIMITIVES["BigInt"]["lessThan"] px ny)[0m
[32m+ 4075  [-]   : app wrapped = (WrapCompletion result)[0m
[32m+ 4076  [-]   : return wrapped[0m
[32m+ 4077  [-]   : {}[0m
[32m+ 4078  [-]   : app __x12__ = (Type px)[0m
[32m+ 4079  [-]   : let __x13__ = (= __x12__ String)[0m
[32m+ 4080  [[32mT[0m/[32mT[0m[32m]: if __x13__ ... else ...[0m
[32m+ 4081  [-]   : { ... }[0m
[32m+ 4082  [-]   : app __x14__ = (Type py)[0m
[32m+ 4083  [-]   : __x13__ = (= __x14__ BigInt)[0m
[32m+ 4084  [-]   : {}[0m
[32m+ 4085  [[32mT[0m/[32mT[0m[32m]: if __x13__ ... else ...[0m
[32m+ 4086  [-]   : { ... }[0m
[32m+ 4087  [-]   : app __x15__ = (StringToBigInt px)[0m
[32m+ 4088  [[31mF[0m/[32mT[0m[32m]: if (is-completion __x15__) ... else ...[0m
[32m+ 4089  [[32mT[0m/[31mF[0m[32m]: if (= __x15__["Type"] CONST_normal) ... else ...[0m
[32m+ 4090  [-]   : __x15__ = __x15__["Value"][0m
[31m- 4091  [-]   : return __x15__[0m
[32m+ 4092  [-]   : {}[0m
[32m+ 4093  [-]   : let nx = __x15__[0m
[32m+ 4094  [[32mT[0m/[32mT[0m[32m]: if (= nx NaN) ... else ...[0m
[32m+ 4095  [-]   : { ... }[0m
[32m+ 4096  [-]   : app __x16__ = (WrapCompletion undefined)[0m
[32m+ 4097  [-]   : return __x16__[0m
[32m+ 4098  [-]   : {}[0m
[32m+ 4099  [-]   : app result = (PRIMITIVES["BigInt"]["lessThan"] nx py)[0m
[32m+ 4100  [-]   : app wrapped = (WrapCompletion result)[0m
[32m+ 4101  [-]   : return wrapped[0m
[32m+ 4102  [-]   : {}[0m
[32m+ 4103  [-]   : app __x17__ = (ToNumeric px)[0m
[32m+ 4104  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x17__) ... else ...[0m
[32m+ 4105  [[32mT[0m/[32mT[0m[32m]: if (= __x17__["Type"] CONST_normal) ... else ...[0m
[32m+ 4106  [-]   : __x17__ = __x17__["Value"][0m
[32m+ 4107  [-]   : return __x17__[0m
[32m+ 4108  [-]   : {}[0m
[32m+ 4109  [-]   : let nx = __x17__[0m
[32m+ 4110  [-]   : app __x18__ = (ToNumeric py)[0m
[32m+ 4111  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x18__) ... else ...[0m
[32m+ 4112  [[32mT[0m/[32mT[0m[32m]: if (= __x18__["Type"] CONST_normal) ... else ...[0m
[32m+ 4113  [-]   : __x18__ = __x18__["Value"][0m
[32m+ 4114  [-]   : return __x18__[0m
[32m+ 4115  [-]   : {}[0m
[32m+ 4116  [-]   : let ny = __x18__[0m
[32m+ 4117  [-]   : app nxT = (Type nx)[0m
[32m+ 4118  [-]   : app nyT = (Type ny)[0m
[32m+ 4119  [[32mT[0m/[32mT[0m[32m]: if (= nxT nyT) ... else ...[0m
[32m+ 4120  [-]   : { ... }[0m
[32m+ 4121  [-]   : app result = (PRIMITIVES[nxT]["lessThan"] nx ny)[0m
[32m+ 4122  [-]   : app wrapped = (WrapCompletion result)[0m
[32m+ 4123  [-]   : return wrapped[0m
[32m+ 4124  [-]   : {}[0m
[32m+ 4125  [-]   : assert (|| (&& (= nxT BigInt) (= nyT Number)) (&& (= nxT Number) (= nyT BigInt)))[0m
[32m+ 4126  [[32mT[0m/[32mT[0m[32m]: if (|| (= nx NaN) (= ny NaN)) ... else ...[0m
[32m+ 4127  [-]   : { ... }[0m
[32m+ 4128  [-]   : app __x26__ = (WrapCompletion undefined)[0m
[32m+ 4129  [-]   : return __x26__[0m
[32m+ 4130  [-]   : {}[0m
[32m+ 4131  [[32mT[0m/[32mT[0m[32m]: if (|| (= nx -Infinity) (= ny Infinity)) ... else ...[0m
[32m+ 4132  [-]   : { ... }[0m
[32m+ 4133  [-]   : app __x27__ = (WrapCompletion true)[0m
[32m+ 4134  [-]   : return __x27__[0m
[32m+ 4135  [-]   : {}[0m
[32m+ 4136  [[32mT[0m/[32mT[0m[32m]: if (|| (= nx Infinity) (= ny -Infinity)) ... else ...[0m
[32m+ 4137  [-]   : { ... }[0m
[32m+ 4138  [-]   : app __x28__ = (WrapCompletion false)[0m
[32m+ 4139  [-]   : return __x28__[0m
[32m+ 4140  [-]   : {}[0m
[32m+ 4141  [-]   : return (< nx ny)[0m
