[33mFunctionDeclarationInstantiation[0m
[33m- Inst: 204 / 265 (76.98%)[0m
[33m- Cond: 66 / 102 (64.71%)[0m
[32m+ 10643 [-]   : { ... }[0m
[32m+ 10644 [-]   : let calleeContext = GLOBAL_context[0m
[32m+ 10645 [-]   : let code = func["ECMAScriptCode"][0m
[32m+ 10646 [-]   : let strict = func["Strict"][0m
[32m+ 10647 [-]   : let formals = func["FormalParameters"][0m
[32m+ 10648 [-]   : access __x0__ = (formals "BoundNames")[0m
[32m+ 10649 [-]   : let parameterNames = __x0__[0m
[32m+ 10650 [-]   : app __x1__ = (IsDuplicate parameterNames)[0m
[32m+ 10651 [[31mF[0m/[32mT[0m[32m]: if __x1__ ... else ...[0m
[31m- 10652 [-]   : let hasDuplicates = true[0m
[32m+ 10653 [-]   : let hasDuplicates = false[0m
[32m+ 10654 [-]   : access __x2__ = (formals "IsSimpleParameterList")[0m
[32m+ 10655 [-]   : let simpleParameterList = __x2__[0m
[32m+ 10656 [-]   : access __x3__ = (formals "ContainsExpression")[0m
[32m+ 10657 [-]   : let hasParameterExpressions = __x3__[0m
[32m+ 10658 [-]   : access __x4__ = (code "VarDeclaredNames")[0m
[32m+ 10659 [-]   : let varNames = __x4__[0m
[32m+ 10660 [-]   : access __x5__ = (code "VarScopedDeclarations")[0m
[32m+ 10661 [-]   : let varDeclarations = __x5__[0m
[32m+ 10662 [-]   : access __x6__ = (code "LexicallyDeclaredNames")[0m
[32m+ 10663 [-]   : let lexicalNames = __x6__[0m
[32m+ 10664 [-]   : let functionNames = (new [])[0m
[32m+ 10665 [-]   : let functionsToInitialize = (new [])[0m
[32m+ 10666 [-]   : let __x7__ = varDeclarations[0m
[32m+ 10667 [-]   : let __x8__ = __x7__["length"][0m
[32m+ 10668 [[32mT[0m/[32mT[0m[32m]: while (< 0i __x8__) { ... }[0m
[32m+ 10669 [-]   : { ... }[0m
[32m+ 10670 [-]   : __x8__ = (- __x8__ 1i)[0m
[32m+ 10671 [-]   : let d = __x7__[__x8__][0m
[32m+ 10672 [[32mT[0m/[32mT[0m[32m]: if (! (|| (|| (is-instance-of d VariableDeclaration) (is-instance-of d ForBinding)) (is-instance-of d BindingIdentifier))) ... else ...[0m
[32m+ 10673 [-]   : { ... }[0m
[32m+ 10674 [-]   : assert (|| (|| (|| (is-instance-of d FunctionDeclaration) (is-instance-of d GeneratorDeclaration)) (is-instance-of d AsyncFunctionDeclaration)) (is-instance-of d AsyncGeneratorDeclaration))[0m
[32m+ 10675 [-]   : access __x9__ = (d "BoundNames")[0m
[32m+ 10676 [-]   : let fn = __x9__[0i][0m
[32m+ 10677 [[32mT[0m/[31mF[0m[32m]: if (! (contains functionNames fn)) ... else ...[0m
[32m+ 10678 [-]   : { ... }[0m
[32m+ 10679 [-]   : prepend fn -> functionNames[0m
[32m+ 10680 [-]   : prepend d -> functionsToInitialize[0m
[31m- 10681 [-]   : {}[0m
[32m+ 10682 [-]   : {}[0m
[32m+ 10683 [-]   : let argumentsObjectNeeded = true[0m
[32m+ 10684 [[32mT[0m/[32mT[0m[32m]: if (= func["ThisMode"] CONST_lexical) ... else ...[0m
[32m+ 10685 [-]   : argumentsObjectNeeded = false[0m
[32m+ 10686 [[31mF[0m/[32mT[0m[32m]: if (contains parameterNames "arguments") ... else ...[0m
[31m- 10687 [-]   : argumentsObjectNeeded = false[0m
[32m+ 10688 [[32mT[0m/[32mT[0m[32m]: if (= hasParameterExpressions false) ... else ...[0m
[32m+ 10689 [[31mF[0m/[32mT[0m[32m]: if (|| (contains functionNames "arguments") (contains lexicalNames "arguments")) ... else ...[0m
[31m- 10690 [-]   : argumentsObjectNeeded = false[0m
[32m+ 10691 [-]   : {}[0m
[32m+ 10692 [-]   : {}[0m
[32m+ 10693 [[32mT[0m/[31mF[0m[32m]: if (|| (= strict true) (= hasParameterExpressions false)) ... else ...[0m
[32m+ 10694 [-]   : { ... }[0m
[32m+ 10695 [-]   : access __x10__ = (calleeContext "LexicalEnvironment")[0m
[32m+ 10696 [-]   : let env = __x10__[0m
[32m+ 10697 [-]   : let envRec = env["EnvironmentRecord"][0m
[31m- 10698 [-]   : { ... }[0m
[31m- 10699 [-]   : access __x11__ = (calleeContext "LexicalEnvironment")[0m
[31m- 10700 [-]   : let calleeEnv = __x11__[0m
[31m- 10701 [-]   : app __x12__ = (NewDeclarativeEnvironment calleeEnv)[0m
[31m- 10702 [-]   : let env = __x12__[0m
[31m- 10703 [-]   : let envRec = env["EnvironmentRecord"][0m
[31m- 10704 [-]   : access __x13__ = (calleeContext "VariableEnvironment")[0m
[31m- 10705 [-]   : assert (= __x13__ calleeEnv)[0m
[31m- 10706 [-]   : calleeContext["LexicalEnvironment"] = env[0m
[32m+ 10707 [-]   : let __x14__ = parameterNames[0m
[32m+ 10708 [-]   : let __x15__ = 0i[0m
[32m+ 10709 [[32mT[0m/[32mT[0m[32m]: while (< __x15__ __x14__["length"]) { ... }[0m
[32m+ 10710 [-]   : { ... }[0m
[32m+ 10711 [-]   : let paramName = __x14__[__x15__][0m
[32m+ 10712 [-]   : app __x16__ = (envRec["HasBinding"] envRec paramName)[0m
[32m+ 10713 [-]   : let alreadyDeclared = __x16__[0m
[32m+ 10714 [[32mT[0m/[31mF[0m[32m]: if (= alreadyDeclared false) ... else ...[0m
[32m+ 10715 [-]   : { ... }[0m
[32m+ 10716 [-]   : app __x17__ = (envRec["CreateMutableBinding"] envRec paramName false)[0m
[32m+ 10717 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x17__) ... else ...[0m
[32m+ 10718 [[32mT[0m/[31mF[0m[32m]: if (= __x17__["Type"] CONST_normal) ... else ...[0m
[32m+ 10719 [-]   : __x17__ = __x17__["Value"][0m
[31m- 10720 [-]   : return __x17__[0m
[32m+ 10721 [-]   : {}[0m
[32m+ 10722 [-]   : __x17__[0m
[32m+ 10723 [[31mF[0m/[32mT[0m[32m]: if (= hasDuplicates true) ... else ...[0m
[31m- 10724 [-]   : { ... }[0m
[31m- 10725 [-]   : app __x18__ = (envRec["InitializeBinding"] envRec paramName undefined)[0m
[31m- 10726 [-]   : if (is-completion __x18__) ... else ...[0m
[31m- 10727 [-]   : if (= __x18__["Type"] CONST_normal) ... else ...[0m
[31m- 10728 [-]   : __x18__ = __x18__["Value"][0m
[31m- 10729 [-]   : return __x18__[0m
[31m- 10730 [-]   : {}[0m
[31m- 10731 [-]   : __x18__[0m
[32m+ 10732 [-]   : {}[0m
[31m- 10733 [-]   : {}[0m
[32m+ 10734 [-]   : __x15__ = (+ __x15__ 1i)[0m
[32m+ 10735 [[32mT[0m/[32mT[0m[32m]: if (= argumentsObjectNeeded true) ... else ...[0m
[32m+ 10736 [-]   : { ... }[0m
[32m+ 10737 [[32mT[0m/[31mF[0m[32m]: if (|| (= strict true) (= simpleParameterList false)) ... else ...[0m
[32m+ 10738 [-]   : { ... }[0m
[32m+ 10739 [-]   : app __x19__ = (CreateUnmappedArgumentsObject argumentsList)[0m
[32m+ 10740 [-]   : let ao = __x19__[0m
[31m- 10741 [-]   : { ... }[0m
[31m- 10742 [-]   : app __x20__ = (CreateMappedArgumentsObject func formals argumentsList envRec)[0m
[31m- 10743 [-]   : let ao = __x20__[0m
[32m+ 10744 [[32mT[0m/[31mF[0m[32m]: if (= strict true) ... else ...[0m
[32m+ 10745 [-]   : { ... }[0m
[32m+ 10746 [-]   : app __x21__ = (envRec["CreateImmutableBinding"] envRec "arguments" false)[0m
[32m+ 10747 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x21__) ... else ...[0m
[32m+ 10748 [[32mT[0m/[31mF[0m[32m]: if (= __x21__["Type"] CONST_normal) ... else ...[0m
[32m+ 10749 [-]   : __x21__ = __x21__["Value"][0m
[31m- 10750 [-]   : return __x21__[0m
[32m+ 10751 [-]   : {}[0m
[32m+ 10752 [-]   : __x21__[0m
[31m- 10753 [-]   : { ... }[0m
[31m- 10754 [-]   : app __x22__ = (envRec["CreateMutableBinding"] envRec "arguments" false)[0m
[31m- 10755 [-]   : if (is-completion __x22__) ... else ...[0m
[31m- 10756 [-]   : if (= __x22__["Type"] CONST_normal) ... else ...[0m
[31m- 10757 [-]   : __x22__ = __x22__["Value"][0m
[31m- 10758 [-]   : return __x22__[0m
[31m- 10759 [-]   : {}[0m
[31m- 10760 [-]   : __x22__[0m
[32m+ 10761 [-]   : app __x23__ = (envRec["InitializeBinding"] envRec "arguments" ao)[0m
[32m+ 10762 [-]   : __x23__[0m
[32m+ 10763 [-]   : let __x24__ = (copy-obj parameterNames)[0m
[32m+ 10764 [-]   : append "arguments" -> __x24__[0m
[32m+ 10765 [-]   : let parameterBindings = __x24__[0m
[32m+ 10766 [-]   : let parameterBindings = parameterNames[0m
[32m+ 10767 [-]   : app __x25__ = (CreateListIteratorRecord argumentsList)[0m
[32m+ 10768 [-]   : let iteratorRecord = __x25__[0m
[32m+ 10769 [[31mF[0m/[32mT[0m[32m]: if (= hasDuplicates true) ... else ...[0m
[31m- 10770 [-]   : { ... }[0m
[31m- 10771 [-]   : access __x26__ = (formals "IteratorBindingInitialization")[0m
[31m- 10772 [-]   : app __x27__ = (__x26__ iteratorRecord undefined)[0m
[31m- 10773 [-]   : if (is-completion __x27__) ... else ...[0m
[31m- 10774 [-]   : if (= __x27__["Type"] CONST_normal) ... else ...[0m
[31m- 10775 [-]   : __x27__ = __x27__["Value"][0m
[31m- 10776 [-]   : return __x27__[0m
[31m- 10777 [-]   : {}[0m
[31m- 10778 [-]   : __x27__[0m
[32m+ 10779 [-]   : { ... }[0m
[32m+ 10780 [-]   : access __x28__ = (formals "IteratorBindingInitialization")[0m
[32m+ 10781 [-]   : app __x29__ = (__x28__ iteratorRecord env)[0m
[32m+ 10782 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x29__) ... else ...[0m
[32m+ 10783 [[32mT[0m/[32mT[0m[32m]: if (= __x29__["Type"] CONST_normal) ... else ...[0m
[32m+ 10784 [-]   : __x29__ = __x29__["Value"][0m
[32m+ 10785 [-]   : return __x29__[0m
[32m+ 10786 [-]   : {}[0m
[32m+ 10787 [-]   : __x29__[0m
[32m+ 10788 [[32mT[0m/[32mT[0m[32m]: if (= hasParameterExpressions false) ... else ...[0m
[32m+ 10789 [-]   : { ... }[0m
[32m+ 10790 [-]   : let instantiatedVarNames = (copy-obj parameterBindings)[0m
[32m+ 10791 [-]   : let __x30__ = varNames[0m
[32m+ 10792 [-]   : let __x31__ = 0i[0m
[32m+ 10793 [[32mT[0m/[32mT[0m[32m]: while (< __x31__ __x30__["length"]) { ... }[0m
[32m+ 10794 [-]   : { ... }[0m
[32m+ 10795 [-]   : let n = __x30__[__x31__][0m
[32m+ 10796 [[32mT[0m/[32mT[0m[32m]: if (! (contains instantiatedVarNames n)) ... else ...[0m
[32m+ 10797 [-]   : { ... }[0m
[32m+ 10798 [-]   : append n -> instantiatedVarNames[0m
[32m+ 10799 [-]   : app __x32__ = (envRec["CreateMutableBinding"] envRec n false)[0m
[32m+ 10800 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x32__) ... else ...[0m
[32m+ 10801 [[32mT[0m/[31mF[0m[32m]: if (= __x32__["Type"] CONST_normal) ... else ...[0m
[32m+ 10802 [-]   : __x32__ = __x32__["Value"][0m
[31m- 10803 [-]   : return __x32__[0m
[32m+ 10804 [-]   : {}[0m
[32m+ 10805 [-]   : __x32__[0m
[32m+ 10806 [-]   : app __x33__ = (envRec["InitializeBinding"] envRec n undefined)[0m
[32m+ 10807 [-]   : __x33__[0m
[32m+ 10808 [-]   : {}[0m
[32m+ 10809 [-]   : __x31__ = (+ __x31__ 1i)[0m
[32m+ 10810 [-]   : let varEnv = env[0m
[32m+ 10811 [-]   : let varEnvRec = envRec[0m
[32m+ 10812 [-]   : { ... }[0m
[32m+ 10813 [-]   : app __x34__ = (NewDeclarativeEnvironment env)[0m
[32m+ 10814 [-]   : let varEnv = __x34__[0m
[32m+ 10815 [-]   : let varEnvRec = varEnv["EnvironmentRecord"][0m
[32m+ 10816 [-]   : calleeContext["VariableEnvironment"] = varEnv[0m
[32m+ 10817 [-]   : let instantiatedVarNames = (new [])[0m
[32m+ 10818 [-]   : let __x35__ = varNames[0m
[32m+ 10819 [-]   : let __x36__ = 0i[0m
[32m+ 10820 [[32mT[0m/[32mT[0m[32m]: while (< __x36__ __x35__["length"]) { ... }[0m
[32m+ 10821 [-]   : { ... }[0m
[32m+ 10822 [-]   : let n = __x35__[__x36__][0m
[32m+ 10823 [[32mT[0m/[31mF[0m[32m]: if (! (contains instantiatedVarNames n)) ... else ...[0m
[32m+ 10824 [-]   : { ... }[0m
[32m+ 10825 [-]   : append n -> instantiatedVarNames[0m
[32m+ 10826 [-]   : app __x37__ = (varEnvRec["CreateMutableBinding"] varEnvRec n false)[0m
[32m+ 10827 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x37__) ... else ...[0m
[32m+ 10828 [[32mT[0m/[31mF[0m[32m]: if (= __x37__["Type"] CONST_normal) ... else ...[0m
[32m+ 10829 [-]   : __x37__ = __x37__["Value"][0m
[31m- 10830 [-]   : return __x37__[0m
[32m+ 10831 [-]   : {}[0m
[32m+ 10832 [-]   : __x37__[0m
[32m+ 10833 [[32mT[0m/[31mF[0m[32m]: if (|| (! (contains parameterBindings n)) (contains functionNames n)) ... else ...[0m
[32m+ 10834 [-]   : let initialValue = undefined[0m
[31m- 10835 [-]   : { ... }[0m
[31m- 10836 [-]   : app __x38__ = (envRec["GetBindingValue"] envRec n false)[0m
[31m- 10837 [-]   : if (is-completion __x38__) ... else ...[0m
[31m- 10838 [-]   : if (= __x38__["Type"] CONST_normal) ... else ...[0m
[31m- 10839 [-]   : __x38__ = __x38__["Value"][0m
[31m- 10840 [-]   : return __x38__[0m
[31m- 10841 [-]   : {}[0m
[31m- 10842 [-]   : let initialValue = __x38__[0m
[32m+ 10843 [-]   : app __x39__ = (varEnvRec["InitializeBinding"] varEnvRec n initialValue)[0m
[32m+ 10844 [-]   : __x39__[0m
[31m- 10845 [-]   : {}[0m
[32m+ 10846 [-]   : __x36__ = (+ __x36__ 1i)[0m
[32m+ 10847 [[31mF[0m/[32mT[0m[32m]: if (= strict false) ... else ...[0m
[31m- 10848 [-]   : { ... }[0m
[31m- 10849 [-]   : app __x40__ = (NewDeclarativeEnvironment varEnv)[0m
[31m- 10850 [-]   : let lexEnv = __x40__[0m
[32m+ 10851 [-]   : let lexEnv = varEnv[0m
[32m+ 10852 [-]   : let lexEnvRec = lexEnv["EnvironmentRecord"][0m
[32m+ 10853 [-]   : calleeContext["LexicalEnvironment"] = lexEnv[0m
[32m+ 10854 [-]   : access __x41__ = (code "LexicallyScopedDeclarations")[0m
[32m+ 10855 [-]   : let lexDeclarations = __x41__[0m
[32m+ 10856 [-]   : let __x42__ = lexDeclarations[0m
[32m+ 10857 [-]   : let __x43__ = 0i[0m
[32m+ 10858 [[32mT[0m/[32mT[0m[32m]: while (< __x43__ __x42__["length"]) { ... }[0m
[32m+ 10859 [-]   : { ... }[0m
[32m+ 10860 [-]   : let d = __x42__[__x43__][0m
[32m+ 10861 [-]   : access __x44__ = (d "BoundNames")[0m
[32m+ 10862 [-]   : let __x45__ = __x44__[0m
[32m+ 10863 [-]   : let __x46__ = 0i[0m
[32m+ 10864 [[32mT[0m/[32mT[0m[32m]: while (< __x46__ __x45__["length"]) { ... }[0m
[32m+ 10865 [-]   : { ... }[0m
[32m+ 10866 [-]   : let dn = __x45__[__x46__][0m
[32m+ 10867 [-]   : access __x47__ = (d "IsConstantDeclaration")[0m
[32m+ 10868 [[32mT[0m/[32mT[0m[32m]: if (= __x47__ true) ... else ...[0m
[32m+ 10869 [-]   : { ... }[0m
[32m+ 10870 [-]   : app __x48__ = (lexEnvRec["CreateImmutableBinding"] lexEnvRec dn true)[0m
[32m+ 10871 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x48__) ... else ...[0m
[32m+ 10872 [[32mT[0m/[31mF[0m[32m]: if (= __x48__["Type"] CONST_normal) ... else ...[0m
[32m+ 10873 [-]   : __x48__ = __x48__["Value"][0m
[31m- 10874 [-]   : return __x48__[0m
[32m+ 10875 [-]   : {}[0m
[32m+ 10876 [-]   : __x48__[0m
[32m+ 10877 [-]   : { ... }[0m
[32m+ 10878 [-]   : app __x49__ = (lexEnvRec["CreateMutableBinding"] lexEnvRec dn false)[0m
[32m+ 10879 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x49__) ... else ...[0m
[32m+ 10880 [[32mT[0m/[31mF[0m[32m]: if (= __x49__["Type"] CONST_normal) ... else ...[0m
[32m+ 10881 [-]   : __x49__ = __x49__["Value"][0m
[31m- 10882 [-]   : return __x49__[0m
[32m+ 10883 [-]   : {}[0m
[32m+ 10884 [-]   : __x49__[0m
[32m+ 10885 [-]   : __x46__ = (+ __x46__ 1i)[0m
[32m+ 10886 [-]   : __x43__ = (+ __x43__ 1i)[0m
[32m+ 10887 [-]   : let __x50__ = functionsToInitialize[0m
[32m+ 10888 [-]   : let __x51__ = 0i[0m
[32m+ 10889 [[32mT[0m/[32mT[0m[32m]: while (< __x51__ __x50__["length"]) { ... }[0m
[32m+ 10890 [-]   : { ... }[0m
[32m+ 10891 [-]   : let f = __x50__[__x51__][0m
[32m+ 10892 [-]   : access __x52__ = (f "BoundNames")[0m
[32m+ 10893 [-]   : let fn = __x52__[0i][0m
[32m+ 10894 [-]   : access __x53__ = (f "InstantiateFunctionObject")[0m
[32m+ 10895 [-]   : app __x54__ = (__x53__ lexEnv)[0m
[32m+ 10896 [-]   : let fo = __x54__[0m
[32m+ 10897 [-]   : app __x55__ = (varEnvRec["SetMutableBinding"] varEnvRec fn fo false)[0m
[32m+ 10898 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x55__) ... else ...[0m
[32m+ 10899 [[32mT[0m/[31mF[0m[32m]: if (= __x55__["Type"] CONST_normal) ... else ...[0m
[32m+ 10900 [-]   : __x55__ = __x55__["Value"][0m
[31m- 10901 [-]   : return __x55__[0m
[32m+ 10902 [-]   : {}[0m
[32m+ 10903 [-]   : __x55__[0m
[32m+ 10904 [-]   : __x51__ = (+ __x51__ 1i)[0m
[32m+ 10905 [-]   : app __x56__ = (NormalCompletion CONST_empty)[0m
[32m+ 10906 [-]   : app __x57__ = (WrapCompletion __x56__)[0m
[32m+ 10907 [-]   : return __x57__[0m
