[32mBitwiseANDExpression1Evaluation0[0m
[32m- Inst: 44 / 44 (100.00%)[0m
[33m- Cond: 7944 / 18 (44133.33%)[0m
[32m+ 3661  [-]   : { ... }[0m
[32m+ 3662  [-]   : access __x0__ = (A "Evaluation")[0m
[32m+ 3663  [-]   : let lref = __x0__[0m
[32m+ 3664  [-]   : app __x1__ = (GetValue lref)[0m
[32m+ 3665  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x1__) ... else ...[0m
[32m+ 3666  [[32mT[0m/[32mT[0m[32m]: if (= __x1__["Type"] CONST_normal) ... else ...[0m
[32m+ 3667  [-]   : __x1__ = __x1__["Value"][0m
[32m+ 3668  [-]   : return __x1__[0m
[32m+ 3669  [-]   : {}[0m
[32m+ 3670  [-]   : let lval = __x1__[0m
[32m+ 3671  [-]   : access __x2__ = (B "Evaluation")[0m
[32m+ 3672  [-]   : let rref = __x2__[0m
[32m+ 3673  [-]   : app __x3__ = (GetValue rref)[0m
[32m+ 3674  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x3__) ... else ...[0m
[32m+ 3675  [[32mT[0m/[32mT[0m[32m]: if (= __x3__["Type"] CONST_normal) ... else ...[0m
[32m+ 3676  [-]   : __x3__ = __x3__["Value"][0m
[32m+ 3677  [-]   : return __x3__[0m
[32m+ 3678  [-]   : {}[0m
[32m+ 3679  [-]   : let rval = __x3__[0m
[32m+ 3680  [-]   : app __x4__ = (ToNumeric lval)[0m
[32m+ 3681  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x4__) ... else ...[0m
[32m+ 3682  [[32mT[0m/[32mT[0m[32m]: if (= __x4__["Type"] CONST_normal) ... else ...[0m
[32m+ 3683  [-]   : __x4__ = __x4__["Value"][0m
[32m+ 3684  [-]   : return __x4__[0m
[32m+ 3685  [-]   : {}[0m
[32m+ 3686  [-]   : let lnum = __x4__[0m
[32m+ 3687  [-]   : app __x5__ = (ToNumeric rval)[0m
[32m+ 3688  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x5__) ... else ...[0m
[32m+ 3689  [[32mT[0m/[32mT[0m[32m]: if (= __x5__["Type"] CONST_normal) ... else ...[0m
[32m+ 3690  [-]   : __x5__ = __x5__["Value"][0m
[32m+ 3691  [-]   : return __x5__[0m
[32m+ 3692  [-]   : {}[0m
[32m+ 3693  [-]   : let rnum = __x5__[0m
[32m+ 3694  [-]   : app lT = (Type lnum)[0m
[32m+ 3695  [-]   : app rT = (Type rnum)[0m
[32m+ 3696  [[32mT[0m/[32mT[0m[32m]: if (! (= lT rT)) ... else ...[0m
[32m+ 3697  [-]   : { ... }[0m
[32m+ 3698  [-]   : app result = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[32m+ 3699  [-]   : return result[0m
[32m+ 3700  [-]   : {}[0m
[32m+ 3701  [-]   : let T = lT[0m
[32m+ 3702  [-]   : app result = (PRIMITIVES[T]["bitwiseAND"] lnum rnum)[0m
[32m+ 3703  [-]   : app wrapped = (WrapCompletion result)[0m
[32m+ 3704  [-]   : return wrapped[0m
