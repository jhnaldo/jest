[32mGetTypeOf[0m
[32m- Inst: 20 / 20 (100.00%)[0m
[32m- Cond: 16 / 16 (100.00%)[0m
[32m+ 20156 [-]   : { ... }[0m
[32m+ 20157 [-]   : let t = (typeof argument)[0m
[32m+ 20158 [[32mT[0m/[32mT[0m[32m]: if (= t "Undefined") ... else ...[0m
[32m+ 20159 [-]   : return "undefined"[0m
[32m+ 20160 [[32mT[0m/[32mT[0m[32m]: if (= t "Null") ... else ...[0m
[32m+ 20161 [-]   : return "object"[0m
[32m+ 20162 [[32mT[0m/[32mT[0m[32m]: if (= t "Boolean") ... else ...[0m
[32m+ 20163 [-]   : return "boolean"[0m
[32m+ 20164 [[32mT[0m/[32mT[0m[32m]: if (= t "Number") ... else ...[0m
[32m+ 20165 [-]   : return "number"[0m
[32m+ 20166 [[32mT[0m/[32mT[0m[32m]: if (= t "String") ... else ...[0m
[32m+ 20167 [-]   : return "string"[0m
[32m+ 20168 [[32mT[0m/[32mT[0m[32m]: if (= t "Symbol") ... else ...[0m
[32m+ 20169 [-]   : return "symbol"[0m
[32m+ 20170 [[32mT[0m/[32mT[0m[32m]: if (= t "BigInt") ... else ...[0m
[32m+ 20171 [-]   : return "bigint"[0m
[32m+ 20172 [-]   : { ... }[0m
[32m+ 20173 [[32mT[0m/[32mT[0m[32m]: if (= argument["Call"] absent) ... else ...[0m
[32m+ 20174 [-]   : return "object"[0m
[32m+ 20175 [-]   : return "function"[0m
