[33mGlobalDeclarationInstantiation[0m
[33m- Inst: 159 / 184 (86.41%)[0m
[33m- Cond: 57 / 70 (81.43%)[0m
[32m+ 20250 [-]   : { ... }[0m
[32m+ 20251 [-]   : let envRec = env["EnvironmentRecord"][0m
[32m+ 20252 [-]   : assert (= (typeof envRec) "GlobalEnvironmentRecord")[0m
[32m+ 20253 [-]   : access __x0__ = (script "LexicallyDeclaredNames")[0m
[32m+ 20254 [-]   : let lexNames = __x0__[0m
[32m+ 20255 [-]   : access __x1__ = (script "VarDeclaredNames")[0m
[32m+ 20256 [-]   : let varNames = __x1__[0m
[32m+ 20257 [-]   : let __x2__ = lexNames[0m
[32m+ 20258 [-]   : let __x3__ = 0i[0m
[32m+ 20259 [[32mT[0m/[32mT[0m[32m]: while (< __x3__ __x2__["length"]) { ... }[0m
[32m+ 20260 [-]   : { ... }[0m
[32m+ 20261 [-]   : let name = __x2__[__x3__][0m
[32m+ 20262 [-]   : app __x4__ = (envRec["HasVarDeclaration"] envRec name)[0m
[32m+ 20263 [[31mF[0m/[32mT[0m[32m]: if (= __x4__ true) ... else ...[0m
[31m- 20264 [-]   : { ... }[0m
[31m- 20265 [-]   : app __x5__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 20266 [-]   : return __x5__[0m
[32m+ 20267 [-]   : {}[0m
[32m+ 20268 [-]   : app __x6__ = (envRec["HasLexicalDeclaration"] envRec name)[0m
[32m+ 20269 [[31mF[0m/[32mT[0m[32m]: if (= __x6__ true) ... else ...[0m
[31m- 20270 [-]   : { ... }[0m
[31m- 20271 [-]   : app __x7__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 20272 [-]   : return __x7__[0m
[32m+ 20273 [-]   : {}[0m
[32m+ 20274 [-]   : app __x8__ = (envRec["HasRestrictedGlobalProperty"] envRec name)[0m
[32m+ 20275 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x8__) ... else ...[0m
[32m+ 20276 [[32mT[0m/[31mF[0m[32m]: if (= __x8__["Type"] CONST_normal) ... else ...[0m
[32m+ 20277 [-]   : __x8__ = __x8__["Value"][0m
[31m- 20278 [-]   : return __x8__[0m
[32m+ 20279 [-]   : {}[0m
[32m+ 20280 [-]   : let hasRestrictedGlobal = __x8__[0m
[32m+ 20281 [[31mF[0m/[32mT[0m[32m]: if (= hasRestrictedGlobal true) ... else ...[0m
[31m- 20282 [-]   : { ... }[0m
[31m- 20283 [-]   : app __x9__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 20284 [-]   : return __x9__[0m
[32m+ 20285 [-]   : {}[0m
[32m+ 20286 [-]   : __x3__ = (+ __x3__ 1i)[0m
[32m+ 20287 [-]   : let __x10__ = varNames[0m
[32m+ 20288 [-]   : let __x11__ = 0i[0m
[32m+ 20289 [[32mT[0m/[32mT[0m[32m]: while (< __x11__ __x10__["length"]) { ... }[0m
[32m+ 20290 [-]   : { ... }[0m
[32m+ 20291 [-]   : let name = __x10__[__x11__][0m
[32m+ 20292 [-]   : app __x12__ = (envRec["HasLexicalDeclaration"] envRec name)[0m
[32m+ 20293 [[31mF[0m/[32mT[0m[32m]: if (= __x12__ true) ... else ...[0m
[31m- 20294 [-]   : { ... }[0m
[31m- 20295 [-]   : app __x13__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 20296 [-]   : return __x13__[0m
[32m+ 20297 [-]   : {}[0m
[32m+ 20298 [-]   : __x11__ = (+ __x11__ 1i)[0m
[32m+ 20299 [-]   : access __x14__ = (script "VarScopedDeclarations")[0m
[32m+ 20300 [-]   : let varDeclarations = __x14__[0m
[32m+ 20301 [-]   : let functionsToInitialize = (new [])[0m
[32m+ 20302 [-]   : let declaredFunctionNames = (new [])[0m
[32m+ 20303 [-]   : let __x15__ = varDeclarations[0m
[32m+ 20304 [-]   : let __x16__ = __x15__["length"][0m
[32m+ 20305 [[32mT[0m/[32mT[0m[32m]: while (< 0i __x16__) { ... }[0m
[32m+ 20306 [-]   : { ... }[0m
[32m+ 20307 [-]   : __x16__ = (- __x16__ 1i)[0m
[32m+ 20308 [-]   : let d = __x15__[__x16__][0m
[32m+ 20309 [[32mT[0m/[32mT[0m[32m]: if (! (|| (|| (is-instance-of d VariableDeclaration) (is-instance-of d ForBinding)) (is-instance-of d BindingIdentifier))) ... else ...[0m
[32m+ 20310 [-]   : { ... }[0m
[32m+ 20311 [-]   : assert (|| (|| (|| (is-instance-of d FunctionDeclaration) (is-instance-of d GeneratorDeclaration)) (is-instance-of d AsyncFunctionDeclaration)) (is-instance-of d AsyncGeneratorDeclaration))[0m
[32m+ 20312 [-]   : access __x17__ = (d "BoundNames")[0m
[32m+ 20313 [-]   : let fn = __x17__[0i][0m
[32m+ 20314 [[32mT[0m/[32mT[0m[32m]: if (! (contains declaredFunctionNames fn)) ... else ...[0m
[32m+ 20315 [-]   : { ... }[0m
[32m+ 20316 [-]   : app __x18__ = (envRec["CanDeclareGlobalFunction"] envRec fn)[0m
[32m+ 20317 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x18__) ... else ...[0m
[32m+ 20318 [[32mT[0m/[31mF[0m[32m]: if (= __x18__["Type"] CONST_normal) ... else ...[0m
[32m+ 20319 [-]   : __x18__ = __x18__["Value"][0m
[31m- 20320 [-]   : return __x18__[0m
[32m+ 20321 [-]   : {}[0m
[32m+ 20322 [-]   : let fnDefinable = __x18__[0m
[32m+ 20323 [[31mF[0m/[32mT[0m[32m]: if (= fnDefinable false) ... else ...[0m
[31m- 20324 [-]   : { ... }[0m
[31m- 20325 [-]   : app __x19__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 20326 [-]   : return __x19__[0m
[32m+ 20327 [-]   : {}[0m
[32m+ 20328 [-]   : append fn -> declaredFunctionNames[0m
[32m+ 20329 [-]   : prepend d -> functionsToInitialize[0m
[32m+ 20330 [-]   : {}[0m
[32m+ 20331 [-]   : {}[0m
[32m+ 20332 [-]   : let declaredVarNames = (new [])[0m
[32m+ 20333 [-]   : let __x20__ = varDeclarations[0m
[32m+ 20334 [-]   : let __x21__ = 0i[0m
[32m+ 20335 [[32mT[0m/[32mT[0m[32m]: while (< __x21__ __x20__["length"]) { ... }[0m
[32m+ 20336 [-]   : { ... }[0m
[32m+ 20337 [-]   : let d = __x20__[__x21__][0m
[32m+ 20338 [[32mT[0m/[32mT[0m[32m]: if (|| (|| (is-instance-of d VariableDeclaration) (is-instance-of d ForBinding)) (is-instance-of d BindingIdentifier)) ... else ...[0m
[32m+ 20339 [-]   : { ... }[0m
[32m+ 20340 [-]   : access __x22__ = (d "BoundNames")[0m
[32m+ 20341 [-]   : let __x23__ = __x22__[0m
[32m+ 20342 [-]   : let __x24__ = 0i[0m
[32m+ 20343 [[32mT[0m/[32mT[0m[32m]: while (< __x24__ __x23__["length"]) { ... }[0m
[32m+ 20344 [-]   : { ... }[0m
[32m+ 20345 [-]   : let vn = __x23__[__x24__][0m
[32m+ 20346 [[32mT[0m/[32mT[0m[32m]: if (! (contains declaredFunctionNames vn)) ... else ...[0m
[32m+ 20347 [-]   : { ... }[0m
[32m+ 20348 [-]   : app __x25__ = (envRec["CanDeclareGlobalVar"] envRec vn)[0m
[32m+ 20349 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x25__) ... else ...[0m
[32m+ 20350 [[32mT[0m/[31mF[0m[32m]: if (= __x25__["Type"] CONST_normal) ... else ...[0m
[32m+ 20351 [-]   : __x25__ = __x25__["Value"][0m
[31m- 20352 [-]   : return __x25__[0m
[32m+ 20353 [-]   : {}[0m
[32m+ 20354 [-]   : let vnDefinable = __x25__[0m
[32m+ 20355 [[31mF[0m/[32mT[0m[32m]: if (= vnDefinable false) ... else ...[0m
[31m- 20356 [-]   : { ... }[0m
[31m- 20357 [-]   : app __x26__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 20358 [-]   : return __x26__[0m
[32m+ 20359 [-]   : {}[0m
[32m+ 20360 [[32mT[0m/[32mT[0m[32m]: if (! (contains declaredVarNames vn)) ... else ...[0m
[32m+ 20361 [-]   : append vn -> declaredVarNames[0m
[32m+ 20362 [-]   : {}[0m
[32m+ 20363 [-]   : {}[0m
[32m+ 20364 [-]   : __x24__ = (+ __x24__ 1i)[0m
[32m+ 20365 [-]   : {}[0m
[32m+ 20366 [-]   : __x21__ = (+ __x21__ 1i)[0m
[32m+ 20367 [-]   : access __x27__ = (script "LexicallyScopedDeclarations")[0m
[32m+ 20368 [-]   : let lexDeclarations = __x27__[0m
[32m+ 20369 [-]   : let __x28__ = lexDeclarations[0m
[32m+ 20370 [-]   : let __x29__ = 0i[0m
[32m+ 20371 [[32mT[0m/[32mT[0m[32m]: while (< __x29__ __x28__["length"]) { ... }[0m
[32m+ 20372 [-]   : { ... }[0m
[32m+ 20373 [-]   : let d = __x28__[__x29__][0m
[32m+ 20374 [-]   : access __x30__ = (d "BoundNames")[0m
[32m+ 20375 [-]   : let __x31__ = __x30__[0m
[32m+ 20376 [-]   : let __x32__ = 0i[0m
[32m+ 20377 [[32mT[0m/[32mT[0m[32m]: while (< __x32__ __x31__["length"]) { ... }[0m
[32m+ 20378 [-]   : { ... }[0m
[32m+ 20379 [-]   : let dn = __x31__[__x32__][0m
[32m+ 20380 [-]   : access __x33__ = (d "IsConstantDeclaration")[0m
[32m+ 20381 [[32mT[0m/[32mT[0m[32m]: if (= __x33__ true) ... else ...[0m
[32m+ 20382 [-]   : { ... }[0m
[32m+ 20383 [-]   : app __x34__ = (envRec["CreateImmutableBinding"] envRec dn true)[0m
[32m+ 20384 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x34__) ... else ...[0m
[32m+ 20385 [[32mT[0m/[31mF[0m[32m]: if (= __x34__["Type"] CONST_normal) ... else ...[0m
[32m+ 20386 [-]   : __x34__ = __x34__["Value"][0m
[31m- 20387 [-]   : return __x34__[0m
[32m+ 20388 [-]   : {}[0m
[32m+ 20389 [-]   : __x34__[0m
[32m+ 20390 [-]   : { ... }[0m
[32m+ 20391 [-]   : app __x35__ = (envRec["CreateMutableBinding"] envRec dn false)[0m
[32m+ 20392 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x35__) ... else ...[0m
[32m+ 20393 [[32mT[0m/[31mF[0m[32m]: if (= __x35__["Type"] CONST_normal) ... else ...[0m
[32m+ 20394 [-]   : __x35__ = __x35__["Value"][0m
[31m- 20395 [-]   : return __x35__[0m
[32m+ 20396 [-]   : {}[0m
[32m+ 20397 [-]   : __x35__[0m
[32m+ 20398 [-]   : __x32__ = (+ __x32__ 1i)[0m
[32m+ 20399 [-]   : __x29__ = (+ __x29__ 1i)[0m
[32m+ 20400 [-]   : let __x36__ = functionsToInitialize[0m
[32m+ 20401 [-]   : let __x37__ = 0i[0m
[32m+ 20402 [[32mT[0m/[32mT[0m[32m]: while (< __x37__ __x36__["length"]) { ... }[0m
[32m+ 20403 [-]   : { ... }[0m
[32m+ 20404 [-]   : let f = __x36__[__x37__][0m
[32m+ 20405 [-]   : access __x38__ = (f "BoundNames")[0m
[32m+ 20406 [-]   : let fn = __x38__[0i][0m
[32m+ 20407 [-]   : access __x39__ = (f "InstantiateFunctionObject")[0m
[32m+ 20408 [-]   : app __x40__ = (__x39__ env)[0m
[32m+ 20409 [-]   : let fo = __x40__[0m
[32m+ 20410 [-]   : app __x41__ = (envRec["CreateGlobalFunctionBinding"] envRec fn fo false)[0m
[32m+ 20411 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x41__) ... else ...[0m
[32m+ 20412 [[32mT[0m/[31mF[0m[32m]: if (= __x41__["Type"] CONST_normal) ... else ...[0m
[32m+ 20413 [-]   : __x41__ = __x41__["Value"][0m
[31m- 20414 [-]   : return __x41__[0m
[32m+ 20415 [-]   : {}[0m
[32m+ 20416 [-]   : __x41__[0m
[32m+ 20417 [-]   : __x37__ = (+ __x37__ 1i)[0m
[32m+ 20418 [-]   : let __x42__ = declaredVarNames[0m
[32m+ 20419 [-]   : let __x43__ = 0i[0m
[32m+ 20420 [[32mT[0m/[32mT[0m[32m]: while (< __x43__ __x42__["length"]) { ... }[0m
[32m+ 20421 [-]   : { ... }[0m
[32m+ 20422 [-]   : let vn = __x42__[__x43__][0m
[32m+ 20423 [-]   : app __x44__ = (envRec["CreateGlobalVarBinding"] envRec vn false)[0m
[32m+ 20424 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x44__) ... else ...[0m
[32m+ 20425 [[32mT[0m/[31mF[0m[32m]: if (= __x44__["Type"] CONST_normal) ... else ...[0m
[32m+ 20426 [-]   : __x44__ = __x44__["Value"][0m
[31m- 20427 [-]   : return __x44__[0m
[32m+ 20428 [-]   : {}[0m
[32m+ 20429 [-]   : __x44__[0m
[32m+ 20430 [-]   : __x43__ = (+ __x43__ 1i)[0m
[32m+ 20431 [-]   : app __x45__ = (NormalCompletion CONST_empty)[0m
[32m+ 20432 [-]   : app __x46__ = (WrapCompletion __x45__)[0m
[32m+ 20433 [-]   : return __x46__[0m
