[33mCreateDynamicFunction[0m
[33m- Inst: 2 / 212 (0.94%)[0m
[31m- Cond: 0 / 80 (0.00%)[0m
[32m+ 8551  [-]   : { ... }[0m
[32m+ 8552  [-]   : ??? "CreateDynamicFunction"[0m
[31m- 8553  [-]   : let callerContext = GLOBAL_executionStack[(- GLOBAL_executionStack["length"] 2i)][0m
[31m- 8554  [-]   : let callerRealm = callerContext["Realm"][0m
[31m- 8555  [-]   : let calleeRealm = REALM[0m
[31m- 8556  [-]   : app __x0__ = (HostEnsureCanCompileStrings callerRealm calleeRealm)[0m
[31m- 8557  [-]   : if (is-completion __x0__) ... else ...[0m
[31m- 8558  [-]   : if (= __x0__["Type"] CONST_normal) ... else ...[0m
[31m- 8559  [-]   : __x0__ = __x0__["Value"][0m
[31m- 8560  [-]   : return __x0__[0m
[31m- 8561  [-]   : {}[0m
[31m- 8562  [-]   : __x0__[0m
[31m- 8563  [-]   : if (= newTarget undefined) ... else ...[0m
[31m- 8564  [-]   : newTarget = constructor[0m
[31m- 8565  [-]   : {}[0m
[31m- 8566  [-]   : if (= kind CONST_normal) ... else ...[0m
[31m- 8567  [-]   : { ... }[0m
[31m- 8568  [-]   : let goal = (new Grammar("Goal" -> "FunctionBody", "Arguments" -> (new [false, false])))[0m
[31m- 8569  [-]   : let parameterGoal = (new Grammar("Goal" -> "FormalParameters", "Arguments" -> (new [false, false])))[0m
[31m- 8570  [-]   : let fallbackProto = "%Function.prototype%"[0m
[31m- 8571  [-]   : if (= kind CONST_generator) ... else ...[0m
[31m- 8572  [-]   : { ... }[0m
[31m- 8573  [-]   : let goal = (new Grammar("Goal" -> "GeneratorBody", "Arguments" -> (new [])))[0m
[31m- 8574  [-]   : let parameterGoal = (new Grammar("Goal" -> "FormalParameters", "Arguments" -> (new [true, false])))[0m
[31m- 8575  [-]   : let fallbackProto = "%Generator%"[0m
[31m- 8576  [-]   : if (= kind CONST_async) ... else ...[0m
[31m- 8577  [-]   : { ... }[0m
[31m- 8578  [-]   : let goal = (new Grammar("Goal" -> "AsyncFunctionBody", "Arguments" -> (new [])))[0m
[31m- 8579  [-]   : let parameterGoal = (new Grammar("Goal" -> "FormalParameters", "Arguments" -> (new [false, true])))[0m
[31m- 8580  [-]   : let fallbackProto = "%AsyncFunction.prototype%"[0m
[31m- 8581  [-]   : { ... }[0m
[31m- 8582  [-]   : assert (= kind CONST_asyncGenerator)[0m
[31m- 8583  [-]   : let goal = (new Grammar("Goal" -> "AsyncGeneratorBody", "Arguments" -> (new [])))[0m
[31m- 8584  [-]   : let parameterGoal = (new Grammar("Goal" -> "FormalParameters", "Arguments" -> (new [true, true])))[0m
[31m- 8585  [-]   : let fallbackProto = "%AsyncGenerator%"[0m
[31m- 8586  [-]   : let argCount = args["length"][0m
[31m- 8587  [-]   : let P = ""[0m
[31m- 8588  [-]   : if (== argCount 0i) ... else ...[0m
[31m- 8589  [-]   : let bodyArg = ""[0m
[31m- 8590  [-]   : if (== argCount 1i) ... else ...[0m
[31m- 8591  [-]   : let bodyArg = args[0i][0m
[31m- 8592  [-]   : { ... }[0m
[31m- 8593  [-]   : assert (< 1i argCount)[0m
[31m- 8594  [-]   : let firstArg = args[0i][0m
[31m- 8595  [-]   : app __x1__ = (ToString firstArg)[0m
[31m- 8596  [-]   : if (is-completion __x1__) ... else ...[0m
[31m- 8597  [-]   : if (= __x1__["Type"] CONST_normal) ... else ...[0m
[31m- 8598  [-]   : __x1__ = __x1__["Value"][0m
[31m- 8599  [-]   : return __x1__[0m
[31m- 8600  [-]   : {}[0m
[31m- 8601  [-]   : P = __x1__[0m
[31m- 8602  [-]   : let k = 1i[0m
[31m- 8603  [-]   : while (< k (- argCount 1i)) { ... }[0m
[31m- 8604  [-]   : { ... }[0m
[31m- 8605  [-]   : let nextArg = args[k][0m
[31m- 8606  [-]   : app __x2__ = (ToString nextArg)[0m
[31m- 8607  [-]   : if (is-completion __x2__) ... else ...[0m
[31m- 8608  [-]   : if (= __x2__["Type"] CONST_normal) ... else ...[0m
[31m- 8609  [-]   : __x2__ = __x2__["Value"][0m
[31m- 8610  [-]   : return __x2__[0m
[31m- 8611  [-]   : {}[0m
[31m- 8612  [-]   : let nextArgString = __x2__[0m
[31m- 8613  [-]   : P = (+ (+ P ",") nextArgString)[0m
[31m- 8614  [-]   : k = (+ k 1i)[0m
[31m- 8615  [-]   : let bodyArg = args[k][0m
[31m- 8616  [-]   : app __x3__ = (ToString bodyArg)[0m
[31m- 8617  [-]   : if (is-completion __x3__) ... else ...[0m
[31m- 8618  [-]   : if (= __x3__["Type"] CONST_normal) ... else ...[0m
[31m- 8619  [-]   : __x3__ = __x3__["Value"][0m
[31m- 8620  [-]   : return __x3__[0m
[31m- 8621  [-]   : {}[0m
[31m- 8622  [-]   : let bodyString = (+ (+ "\n" __x3__) "\n")[0m
[31m- 8623  [-]   : let parameters = (parse-syntax P parameterGoal["Goal"] parameterGoal["Arguments"])[0m
[31m- 8624  [-]   : if (= parameters absent) ... else ...[0m
[31m- 8625  [-]   : { ... }[0m
[31m- 8626  [-]   : app __x7__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 8627  [-]   : return __x7__[0m
[31m- 8628  [-]   : {}[0m
[31m- 8629  [-]   : let body = (parse-syntax bodyString goal["Goal"] goal["Arguments"])[0m
[31m- 8630  [-]   : if (= body absent) ... else ...[0m
[31m- 8631  [-]   : { ... }[0m
[31m- 8632  [-]   : app __x7__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 8633  [-]   : return __x7__[0m
[31m- 8634  [-]   : {}[0m
[31m- 8635  [-]   : access __x6__ = (parameters "IsSimpleParameterList")[0m
[31m- 8636  [-]   : if (= __x6__ false) ... else ...[0m
[31m- 8637  [-]   : { ... }[0m
[31m- 8638  [-]   : app __x7__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 8639  [-]   : return __x7__[0m
[31m- 8640  [-]   : {}[0m
[31m- 8641  [-]   : access boundNames = (parameters "BoundNames")[0m
[31m- 8642  [-]   : let idx = 0i[0m
[31m- 8643  [-]   : let len = boundNames["length"][0m
[31m- 8644  [-]   : access declNames = (body "LexicallyDeclaredNames")[0m
[31m- 8645  [-]   : while (< idx len) { ... }[0m
[31m- 8646  [-]   : { ... }[0m
[31m- 8647  [-]   : let name = boundNames[idx][0m
[31m- 8648  [-]   : if (contains declNames name) ... else ...[0m
[31m- 8649  [-]   : { ... }[0m
[31m- 8650  [-]   : app _ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 8651  [-]   : return _[0m
[31m- 8652  [-]   : {}[0m
[31m- 8653  [-]   : idx = (+ idx 1i)[0m
[31m- 8654  [-]   : access __x8__ = (body "Contains")[0m
[31m- 8655  [-]   : app __x9__ = (__x8__ "SuperCall")[0m
[31m- 8656  [-]   : if (= __x9__ true) ... else ...[0m
[31m- 8657  [-]   : { ... }[0m
[31m- 8658  [-]   : app __x10__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 8659  [-]   : return __x10__[0m
[31m- 8660  [-]   : {}[0m
[31m- 8661  [-]   : access __x11__ = (parameters "Contains")[0m
[31m- 8662  [-]   : app __x12__ = (__x11__ "SuperCall")[0m
[31m- 8663  [-]   : if (= __x12__ true) ... else ...[0m
[31m- 8664  [-]   : { ... }[0m
[31m- 8665  [-]   : app __x13__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 8666  [-]   : return __x13__[0m
[31m- 8667  [-]   : {}[0m
[31m- 8668  [-]   : access __x14__ = (body "Contains")[0m
[31m- 8669  [-]   : app __x15__ = (__x14__ "SuperProperty")[0m
[31m- 8670  [-]   : if (= __x15__ true) ... else ...[0m
[31m- 8671  [-]   : { ... }[0m
[31m- 8672  [-]   : app __x16__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 8673  [-]   : return __x16__[0m
[31m- 8674  [-]   : {}[0m
[31m- 8675  [-]   : access __x17__ = (parameters "Contains")[0m
[31m- 8676  [-]   : app __x18__ = (__x17__ "SuperProperty")[0m
[31m- 8677  [-]   : if (= __x18__ true) ... else ...[0m
[31m- 8678  [-]   : { ... }[0m
[31m- 8679  [-]   : app __x19__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 8680  [-]   : return __x19__[0m
[31m- 8681  [-]   : {}[0m
[31m- 8682  [-]   : if (|| (= kind CONST_generator) (= kind CONST_asyncGenerator)) ... else ...[0m
[31m- 8683  [-]   : { ... }[0m
[31m- 8684  [-]   : access __x20__ = (parameters "Contains")[0m
[31m- 8685  [-]   : app __x21__ = (__x20__ "YieldExpression")[0m
[31m- 8686  [-]   : if (= __x21__ true) ... else ...[0m
[31m- 8687  [-]   : { ... }[0m
[31m- 8688  [-]   : app __x22__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 8689  [-]   : return __x22__[0m
[31m- 8690  [-]   : {}[0m
[31m- 8691  [-]   : {}[0m
[31m- 8692  [-]   : if (|| (= kind CONST_async) (= kind CONST_asyncGenerator)) ... else ...[0m
[31m- 8693  [-]   : { ... }[0m
[31m- 8694  [-]   : access __x23__ = (parameters "Contains")[0m
[31m- 8695  [-]   : app __x24__ = (__x23__ "AwaitExpression")[0m
[31m- 8696  [-]   : if (= __x24__ true) ... else ...[0m
[31m- 8697  [-]   : { ... }[0m
[31m- 8698  [-]   : app __x25__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 8699  [-]   : return __x25__[0m
[31m- 8700  [-]   : {}[0m
[31m- 8701  [-]   : {}[0m
[31m- 8702  [-]   : let tempList = (new [])[0m
[31m- 8703  [-]   : idx = 0i[0m
[31m- 8704  [-]   : while (< idx len) { ... }[0m
[31m- 8705  [-]   : { ... }[0m
[31m- 8706  [-]   : name = boundNames[idx][0m
[31m- 8707  [-]   : if (contains tempList name) ... else ...[0m
[31m- 8708  [-]   : { ... }[0m
[31m- 8709  [-]   : app _ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 8710  [-]   : return _[0m
[31m- 8711  [-]   : {}[0m
[31m- 8712  [-]   : append name -> tempList[0m
[31m- 8713  [-]   : idx = (+ idx 1i)[0m
[31m- 8714  [-]   : app __x26__ = (GetPrototypeFromConstructor newTarget fallbackProto)[0m
[31m- 8715  [-]   : if (is-completion __x26__) ... else ...[0m
[31m- 8716  [-]   : if (= __x26__["Type"] CONST_normal) ... else ...[0m
[31m- 8717  [-]   : __x26__ = __x26__["Value"][0m
[31m- 8718  [-]   : return __x26__[0m
[31m- 8719  [-]   : {}[0m
[31m- 8720  [-]   : let proto = __x26__[0m
[31m- 8721  [-]   : let realmF = REALM[0m
[31m- 8722  [-]   : let scope = realmF["GlobalEnv"][0m
[31m- 8723  [-]   : app __x27__ = (OrdinaryFunctionCreate proto parameters body CONST_nonlexicalthis scope)[0m
[31m- 8724  [-]   : if (is-completion __x27__) ... else ...[0m
[31m- 8725  [-]   : if (= __x27__["Type"] CONST_normal) ... else ...[0m
[31m- 8726  [-]   : __x27__ = __x27__["Value"][0m
[31m- 8727  [-]   : return __x27__[0m
[31m- 8728  [-]   : {}[0m
[31m- 8729  [-]   : let F = __x27__[0m
[31m- 8730  [-]   : if (= kind CONST_generator) ... else ...[0m
[31m- 8731  [-]   : { ... }[0m
[31m- 8732  [-]   : app prototype = (OrdinaryObjectCreate INTRINSIC_GeneratorPrototype)[0m
[31m- 8733  [-]   : app __x28__ = (DefinePropertyOrThrow F "prototype" (new PropertyDescriptor("Value" -> prototype, "Writable" -> true, "Enumerable" -> false, "Configurable" -> false)))[0m
[31m- 8734  [-]   : __x28__[0m
[31m- 8735  [-]   : if (= kind CONST_asyncGenerator) ... else ...[0m
[31m- 8736  [-]   : { ... }[0m
[31m- 8737  [-]   : app prototype = (OrdinaryObjectCreate INTRINSIC_AsyncGeneratorPrototype)[0m
[31m- 8738  [-]   : app __x29__ = (DefinePropertyOrThrow F "prototype" (new PropertyDescriptor("Value" -> prototype, "Writable" -> true, "Enumerable" -> false, "Configurable" -> false)))[0m
[31m- 8739  [-]   : __x29__[0m
[31m- 8740  [-]   : if (= kind CONST_normal) ... else ...[0m
[31m- 8741  [-]   : { ... }[0m
[31m- 8742  [-]   : app __x30__ = (MakeConstructor F)[0m
[31m- 8743  [-]   : __x30__[0m
[31m- 8744  [-]   : {}[0m
[31m- 8745  [-]   : app __x31__ = (SetFunctionName F "anonymous")[0m
[31m- 8746  [-]   : __x31__[0m
[31m- 8747  [-]   : if (|| (= kind CONST_normal) (= kind CONST_generator)) ... else ...[0m
[31m- 8748  [-]   : let prefix = "function"[0m
[31m- 8749  [-]   : if[0m
[31m- 8750  [-]   : (|| (= kind CONST_async) (= kind CONST_asyncGenerator))[0m
[31m- 8751  [-]   : let prefix = "async function"[0m
[31m- 8752  [-]   : let sourceString = (+ (+ (+ (+ (+ (+ prefix " anonymous(") P) "\n") ") {") bodyString) "}")[0m
[31m- 8753  [-]   : app[0m
[31m- 8754  [-]   : __x32__ = sourceString[0m
[31m- 8755  [-]   : if (is-completion __x32__) ... else ...[0m
[31m- 8756  [-]   : if (= __x32__["Type"] CONST_normal) ... else ...[0m
[31m- 8757  [-]   : __x32__ = __x32__["Value"][0m
[31m- 8758  [-]   : return __x32__[0m
[31m- 8759  [-]   : {}[0m
[31m- 8760  [-]   : F["SourceText"] = __x32__[0m
[31m- 8761  [-]   : app __x33__ = (WrapCompletion F)[0m
[31m- 8762  [-]   : return __x33__[0m
