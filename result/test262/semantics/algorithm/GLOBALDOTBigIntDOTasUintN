[32mGLOBALDOTBigIntDOTasUintN[0m
[32m- Inst: 20 / 20 (100.00%)[0m
[33m- Cond: 7944 / 8 (99300.00%)[0m
[32m+ 13860 [-]   : { ... }[0m
[32m+ 13861 [-]   : app __x0__ = (GetArgument argumentsList 0i)[0m
[32m+ 13862 [-]   : let bits = __x0__[0m
[32m+ 13863 [-]   : app __x1__ = (GetArgument argumentsList 1i)[0m
[32m+ 13864 [-]   : let bigint = __x1__[0m
[32m+ 13865 [-]   : app __x2__ = (ToIndex bits)[0m
[32m+ 13866 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x2__) ... else ...[0m
[32m+ 13867 [[32mT[0m/[32mT[0m[32m]: if (= __x2__["Type"] CONST_normal) ... else ...[0m
[32m+ 13868 [-]   : __x2__ = __x2__["Value"][0m
[32m+ 13869 [-]   : return __x2__[0m
[32m+ 13870 [-]   : {}[0m
[32m+ 13871 [-]   : let bits = __x2__[0m
[32m+ 13872 [-]   : app __x3__ = (ToBigInt bigint)[0m
[32m+ 13873 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x3__) ... else ...[0m
[32m+ 13874 [[32mT[0m/[32mT[0m[32m]: if (= __x3__["Type"] CONST_normal) ... else ...[0m
[32m+ 13875 [-]   : __x3__ = __x3__["Value"][0m
[32m+ 13876 [-]   : return __x3__[0m
[32m+ 13877 [-]   : {}[0m
[32m+ 13878 [-]   : let bigint = __x3__[0m
[32m+ 13879 [-]   : return (%% (convert bigint num2bigint ) (** 2n (convert bits num2bigint )))[0m
