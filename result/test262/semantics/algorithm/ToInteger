[33mToInteger[0m
[33m- Inst: 23 / 26 (88.46%)[0m
[33m- Cond: 9 / 10 (90.00%)[0m
[32m+ 28174 [-]   : { ... }[0m
[32m+ 28175 [-]   : app __x0__ = (ToNumber argument)[0m
[32m+ 28176 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x0__) ... else ...[0m
[32m+ 28177 [[32mT[0m/[32mT[0m[32m]: if (= __x0__["Type"] CONST_normal) ... else ...[0m
[32m+ 28178 [-]   : __x0__ = __x0__["Value"][0m
[32m+ 28179 [-]   : return __x0__[0m
[32m+ 28180 [-]   : {}[0m
[32m+ 28181 [-]   : let number = __x0__[0m
[32m+ 28182 [[32mT[0m/[32mT[0m[32m]: if (|| (|| (= number NaN) (= number 0i)) (= number -0.0)) ... else ...[0m
[32m+ 28183 [-]   : { ... }[0m
[32m+ 28184 [-]   : app __x1__ = (WrapCompletion 0i)[0m
[32m+ 28185 [-]   : return __x1__[0m
[32m+ 28186 [-]   : {}[0m
[32m+ 28187 [[32mT[0m/[32mT[0m[32m]: if (|| (= number Infinity) (= number -Infinity)) ... else ...[0m
[32m+ 28188 [-]   : { ... }[0m
[32m+ 28189 [-]   : app __x2__ = (WrapCompletion number)[0m
[32m+ 28190 [-]   : return __x2__[0m
[32m+ 28191 [-]   : {}[0m
[32m+ 28192 [-]   : let integer = (convert number num2int )[0m
[32m+ 28193 [[31mF[0m/[32mT[0m[32m]: if (= integer -0.0) ... else ...[0m
[31m- 28194 [-]   : { ... }[0m
[31m- 28195 [-]   : app __x3__ = (WrapCompletion 0i)[0m
[31m- 28196 [-]   : return __x3__[0m
[32m+ 28197 [-]   : {}[0m
[32m+ 28198 [-]   : app __x4__ = (WrapCompletion integer)[0m
[32m+ 28199 [-]   : return __x4__[0m
