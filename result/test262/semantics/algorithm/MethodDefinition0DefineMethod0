[32mMethodDefinition0DefineMethod0[0m
[32m- Inst: 20 / 20 (100.00%)[0m
[32m- Cond: 6 / 6 (100.00%)[0m
[32m+ 22891 [-]   : { ... }[0m
[32m+ 22892 [-]   : access __x0__ = (PropertyName "Evaluation")[0m
[32m+ 22893 [-]   : let propKey = __x0__[0m
[32m+ 22894 [[32mT[0m/[32mT[0m[32m]: if (is-completion propKey) ... else ...[0m
[32m+ 22895 [[32mT[0m/[32mT[0m[32m]: if (= propKey["Type"] CONST_normal) ... else ...[0m
[32m+ 22896 [-]   : propKey = propKey["Value"][0m
[32m+ 22897 [-]   : return propKey[0m
[32m+ 22898 [-]   : {}[0m
[32m+ 22899 [-]   : propKey[0m
[32m+ 22900 [-]   : let scope = GLOBAL_context["LexicalEnvironment"][0m
[32m+ 22901 [[32mT[0m/[32mT[0m[32m]: if (! (= functionPrototype absent)) ... else ...[0m
[32m+ 22902 [-]   : let prototype = functionPrototype[0m
[32m+ 22903 [-]   : let prototype = INTRINSIC_FunctionPrototype[0m
[32m+ 22904 [-]   : app __x1__ = (OrdinaryFunctionCreate prototype UniqueFormalParameters FunctionBody CONST_nonlexicalthis scope)[0m
[32m+ 22905 [-]   : let closure = __x1__[0m
[32m+ 22906 [-]   : app __x2__ = (MakeMethod closure object)[0m
[32m+ 22907 [-]   : __x2__[0m
[32m+ 22908 [-]   : closure["SourceText"] = (get-syntax this)[0m
[32m+ 22909 [-]   : app __x3__ = (WrapCompletion (new Record("Key" -> propKey, "Closure" -> closure)))[0m
[32m+ 22910 [-]   : return __x3__[0m
