[33mValidateAndApplyPropertyDescriptor[0m
[33m- Inst: 203 / 215 (94.42%)[0m
[33m- Cond: 94 / 106 (88.68%)[0m
[32m+ 29016 [-]   : { ... }[0m
[32m+ 29017 [[32mT[0m/[32mT[0m[32m]: if (= current undefined) ... else ...[0m
[32m+ 29018 [-]   : { ... }[0m
[32m+ 29019 [[32mT[0m/[32mT[0m[32m]: if (= extensible false) ... else ...[0m
[32m+ 29020 [-]   : { ... }[0m
[32m+ 29021 [-]   : app __x0__ = (WrapCompletion false)[0m
[32m+ 29022 [-]   : return __x0__[0m
[32m+ 29023 [-]   : {}[0m
[32m+ 29024 [-]   : assert (= extensible true)[0m
[32m+ 29025 [-]   : app __x1__ = (IsGenericDescriptor Desc)[0m
[32m+ 29026 [-]   : let __x2__ = (= __x1__ true)[0m
[32m+ 29027 [[32mT[0m/[32mT[0m[32m]: if __x2__ ... else ...[0m
[32m+ 29028 [-]   : {}[0m
[32m+ 29029 [-]   : { ... }[0m
[32m+ 29030 [-]   : app __x3__ = (IsDataDescriptor Desc)[0m
[32m+ 29031 [-]   : __x2__ = (= __x3__ true)[0m
[32m+ 29032 [[32mT[0m/[32mT[0m[32m]: if __x2__ ... else ...[0m
[32m+ 29033 [[32mT[0m/[31mF[0m[32m]: if (! (= O undefined)) ... else ...[0m
[32m+ 29034 [-]   : { ... }[0m
[32m+ 29035 [-]   : dp = (new DataProperty())[0m
[32m+ 29036 [[32mT[0m/[32mT[0m[32m]: if (! (= absent Desc["Value"])) ... else ...[0m
[32m+ 29037 [-]   : dp["Value"] = Desc["Value"][0m
[32m+ 29038 [-]   : dp["Value"] = undefined[0m
[32m+ 29039 [[32mT[0m/[32mT[0m[32m]: if (! (= absent Desc["Writable"])) ... else ...[0m
[32m+ 29040 [-]   : dp["Writable"] = Desc["Writable"][0m
[32m+ 29041 [-]   : dp["Writable"] = false[0m
[32m+ 29042 [[32mT[0m/[32mT[0m[32m]: if (! (= absent Desc["Enumerable"])) ... else ...[0m
[32m+ 29043 [-]   : dp["Enumerable"] = Desc["Enumerable"][0m
[32m+ 29044 [-]   : dp["Enumerable"] = false[0m
[32m+ 29045 [[32mT[0m/[32mT[0m[32m]: if (! (= absent Desc["Configurable"])) ... else ...[0m
[32m+ 29046 [-]   : dp["Configurable"] = Desc["Configurable"][0m
[32m+ 29047 [-]   : dp["Configurable"] = false[0m
[32m+ 29048 [-]   : O["SubMap"][P] = dp[0m
[31m- 29049 [-]   : {}[0m
[32m+ 29050 [-]   : { ... }[0m
[32m+ 29051 [-]   : app __x4__ = (IsAccessorDescriptor Desc)[0m
[32m+ 29052 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x4__) ... else ...[0m
[32m+ 29053 [[32mT[0m/[31mF[0m[32m]: if (= __x4__["Type"] CONST_normal) ... else ...[0m
[32m+ 29054 [-]   : __x4__ = __x4__["Value"][0m
[31m- 29055 [-]   : return __x4__[0m
[32m+ 29056 [-]   : {}[0m
[32m+ 29057 [-]   : assert (= __x4__ true)[0m
[32m+ 29058 [[32mT[0m/[31mF[0m[32m]: if (! (= O undefined)) ... else ...[0m
[32m+ 29059 [-]   : { ... }[0m
[32m+ 29060 [-]   : dp = (new AccessorProperty())[0m
[32m+ 29061 [[32mT[0m/[32mT[0m[32m]: if (! (= absent Desc["Get"])) ... else ...[0m
[32m+ 29062 [-]   : dp["Get"] = Desc["Get"][0m
[32m+ 29063 [-]   : dp["Get"] = undefined[0m
[32m+ 29064 [[32mT[0m/[32mT[0m[32m]: if (! (= absent Desc["Set"])) ... else ...[0m
[32m+ 29065 [-]   : dp["Set"] = Desc["Set"][0m
[32m+ 29066 [-]   : dp["Set"] = undefined[0m
[32m+ 29067 [[32mT[0m/[32mT[0m[32m]: if (! (= absent Desc["Enumerable"])) ... else ...[0m
[32m+ 29068 [-]   : dp["Enumerable"] = Desc["Enumerable"][0m
[32m+ 29069 [-]   : dp["Enumerable"] = false[0m
[32m+ 29070 [[32mT[0m/[32mT[0m[32m]: if (! (= absent Desc["Configurable"])) ... else ...[0m
[32m+ 29071 [-]   : dp["Configurable"] = Desc["Configurable"][0m
[32m+ 29072 [-]   : dp["Configurable"] = false[0m
[32m+ 29073 [-]   : O["SubMap"][P] = dp[0m
[31m- 29074 [-]   : {}[0m
[32m+ 29075 [-]   : app __x5__ = (WrapCompletion true)[0m
[32m+ 29076 [-]   : return __x5__[0m
[32m+ 29077 [-]   : {}[0m
[32m+ 29078 [[32mT[0m/[32mT[0m[32m]: if (&& (= absent Desc["Value"]) (&& (= absent Desc["Writable"]) (&& (= absent Desc["Get"]) (&& (= absent Desc["Set"]) (&& (= absent Desc["Enumerable"]) (= absent Desc["Configurable"])))))) ... else ...[0m
[32m+ 29079 [-]   : { ... }[0m
[32m+ 29080 [-]   : app __x6__ = (WrapCompletion true)[0m
[32m+ 29081 [-]   : return __x6__[0m
[32m+ 29082 [-]   : {}[0m
[32m+ 29083 [[32mT[0m/[32mT[0m[32m]: if (= current["Configurable"] false) ... else ...[0m
[32m+ 29084 [-]   : { ... }[0m
[32m+ 29085 [[32mT[0m/[32mT[0m[32m]: if (= Desc["Configurable"] true) ... else ...[0m
[32m+ 29086 [-]   : { ... }[0m
[32m+ 29087 [-]   : app __x7__ = (WrapCompletion false)[0m
[32m+ 29088 [-]   : return __x7__[0m
[32m+ 29089 [-]   : {}[0m
[32m+ 29090 [-]   : let __x8__ = (! (= Desc["Enumerable"] absent))[0m
[32m+ 29091 [[32mT[0m/[32mT[0m[32m]: if __x8__ ... else ...[0m
[32m+ 29092 [-]   : { ... }[0m
[32m+ 29093 [-]   : app __x9__ = (SameValue Desc["Enumerable"] current["Enumerable"])[0m
[32m+ 29094 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x9__) ... else ...[0m
[32m+ 29095 [[32mT[0m/[31mF[0m[32m]: if (= __x9__["Type"] CONST_normal) ... else ...[0m
[32m+ 29096 [-]   : __x9__ = __x9__["Value"][0m
[31m- 29097 [-]   : return __x9__[0m
[32m+ 29098 [-]   : {}[0m
[32m+ 29099 [-]   : __x8__ = (= __x9__ false)[0m
[32m+ 29100 [-]   : {}[0m
[32m+ 29101 [[32mT[0m/[32mT[0m[32m]: if __x8__ ... else ...[0m
[32m+ 29102 [-]   : { ... }[0m
[32m+ 29103 [-]   : app __x10__ = (WrapCompletion false)[0m
[32m+ 29104 [-]   : return __x10__[0m
[32m+ 29105 [-]   : {}[0m
[32m+ 29106 [-]   : {}[0m
[32m+ 29107 [-]   : app __x11__ = (IsGenericDescriptor Desc)[0m
[32m+ 29108 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x11__) ... else ...[0m
[32m+ 29109 [[32mT[0m/[31mF[0m[32m]: if (= __x11__["Type"] CONST_normal) ... else ...[0m
[32m+ 29110 [-]   : __x11__ = __x11__["Value"][0m
[31m- 29111 [-]   : return __x11__[0m
[32m+ 29112 [-]   : {}[0m
[32m+ 29113 [[32mT[0m/[32mT[0m[32m]: if (= __x11__ true) ... else ...[0m
[32m+ 29114 [-]   : {}[0m
[32m+ 29115 [-]   : { ... }[0m
[32m+ 29116 [-]   : app __x12__ = (IsDataDescriptor current)[0m
[32m+ 29117 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x12__) ... else ...[0m
[32m+ 29118 [[32mT[0m/[31mF[0m[32m]: if (= __x12__["Type"] CONST_normal) ... else ...[0m
[32m+ 29119 [-]   : __x12__ = __x12__["Value"][0m
[31m- 29120 [-]   : return __x12__[0m
[32m+ 29121 [-]   : {}[0m
[32m+ 29122 [-]   : app __x13__ = (IsDataDescriptor Desc)[0m
[32m+ 29123 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x13__) ... else ...[0m
[32m+ 29124 [[32mT[0m/[31mF[0m[32m]: if (= __x13__["Type"] CONST_normal) ... else ...[0m
[32m+ 29125 [-]   : __x13__ = __x13__["Value"][0m
[31m- 29126 [-]   : return __x13__[0m
[32m+ 29127 [-]   : {}[0m
[32m+ 29128 [-]   : app __x14__ = (SameValue __x12__ __x13__)[0m
[32m+ 29129 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x14__) ... else ...[0m
[32m+ 29130 [[32mT[0m/[31mF[0m[32m]: if (= __x14__["Type"] CONST_normal) ... else ...[0m
[32m+ 29131 [-]   : __x14__ = __x14__["Value"][0m
[31m- 29132 [-]   : return __x14__[0m
[32m+ 29133 [-]   : {}[0m
[32m+ 29134 [[32mT[0m/[32mT[0m[32m]: if (= __x14__ false) ... else ...[0m
[32m+ 29135 [-]   : { ... }[0m
[32m+ 29136 [[32mT[0m/[32mT[0m[32m]: if (= current["Configurable"] false) ... else ...[0m
[32m+ 29137 [-]   : { ... }[0m
[32m+ 29138 [-]   : app __x15__ = (WrapCompletion false)[0m
[32m+ 29139 [-]   : return __x15__[0m
[32m+ 29140 [-]   : {}[0m
[32m+ 29141 [-]   : app __x16__ = (IsDataDescriptor current)[0m
[32m+ 29142 [[32mT[0m/[32mT[0m[32m]: if (= __x16__ true) ... else ...[0m
[32m+ 29143 [[32mT[0m/[31mF[0m[32m]: if (! (= O undefined)) ... else ...[0m
[32m+ 29144 [-]   : { ... }[0m
[32m+ 29145 [-]   : let __x17__ = O["SubMap"][P][0m
[32m+ 29146 [-]   : O["SubMap"][P] = (new AccessorProperty("Get" -> undefined, "Set" -> undefined, "Enumerable" -> __x17__["Enumerable"], "Configurable" -> __x17__["Configurable"]))[0m
[31m- 29147 [-]   : {}[0m
[32m+ 29148 [[32mT[0m/[31mF[0m[32m]: if (! (= O undefined)) ... else ...[0m
[32m+ 29149 [-]   : { ... }[0m
[32m+ 29150 [-]   : let __x18__ = O["SubMap"][P][0m
[32m+ 29151 [-]   : O["SubMap"][P] = (new DataProperty("Value" -> undefined, "Writable" -> false, "Enumerable" -> __x18__["Enumerable"], "Configurable" -> __x18__["Configurable"]))[0m
[31m- 29152 [-]   : {}[0m
[32m+ 29153 [-]   : { ... }[0m
[32m+ 29154 [-]   : app __x19__ = (IsDataDescriptor current)[0m
[32m+ 29155 [-]   : app __x20__ = (IsDataDescriptor Desc)[0m
[32m+ 29156 [[32mT[0m/[32mT[0m[32m]: if (&& (= __x19__ true) (= __x20__ true)) ... else ...[0m
[32m+ 29157 [[32mT[0m/[32mT[0m[32m]: if (&& (= current["Configurable"] false) (= current["Writable"] false)) ... else ...[0m
[32m+ 29158 [-]   : { ... }[0m
[32m+ 29159 [[32mT[0m/[32mT[0m[32m]: if (&& (! (= Desc["Writable"] absent)) (= Desc["Writable"] true)) ... else ...[0m
[32m+ 29160 [-]   : { ... }[0m
[32m+ 29161 [-]   : app __x21__ = (WrapCompletion false)[0m
[32m+ 29162 [-]   : return __x21__[0m
[32m+ 29163 [-]   : {}[0m
[32m+ 29164 [-]   : let __x22__ = (! (= Desc["Value"] absent))[0m
[32m+ 29165 [[32mT[0m/[32mT[0m[32m]: if __x22__ ... else ...[0m
[32m+ 29166 [-]   : { ... }[0m
[32m+ 29167 [-]   : app __x23__ = (SameValue Desc["Value"] current["Value"])[0m
[32m+ 29168 [-]   : __x22__ = (= __x23__ false)[0m
[32m+ 29169 [-]   : {}[0m
[32m+ 29170 [[32mT[0m/[32mT[0m[32m]: if __x22__ ... else ...[0m
[32m+ 29171 [-]   : { ... }[0m
[32m+ 29172 [-]   : app __x24__ = (WrapCompletion false)[0m
[32m+ 29173 [-]   : return __x24__[0m
[32m+ 29174 [-]   : {}[0m
[32m+ 29175 [-]   : app __x25__ = (WrapCompletion true)[0m
[32m+ 29176 [-]   : return __x25__[0m
[32m+ 29177 [-]   : {}[0m
[32m+ 29178 [-]   : { ... }[0m
[32m+ 29179 [-]   : app __x26__ = (IsAccessorDescriptor current)[0m
[32m+ 29180 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x26__) ... else ...[0m
[32m+ 29181 [[32mT[0m/[31mF[0m[32m]: if (= __x26__["Type"] CONST_normal) ... else ...[0m
[32m+ 29182 [-]   : __x26__ = __x26__["Value"][0m
[31m- 29183 [-]   : return __x26__[0m
[32m+ 29184 [-]   : {}[0m
[32m+ 29185 [-]   : app __x27__ = (IsAccessorDescriptor Desc)[0m
[32m+ 29186 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x27__) ... else ...[0m
[32m+ 29187 [[32mT[0m/[31mF[0m[32m]: if (= __x27__["Type"] CONST_normal) ... else ...[0m
[32m+ 29188 [-]   : __x27__ = __x27__["Value"][0m
[31m- 29189 [-]   : return __x27__[0m
[32m+ 29190 [-]   : {}[0m
[32m+ 29191 [-]   : assert (&& (= __x26__ true) (= __x27__ true))[0m
[32m+ 29192 [[32mT[0m/[32mT[0m[32m]: if (= current["Configurable"] false) ... else ...[0m
[32m+ 29193 [-]   : { ... }[0m
[32m+ 29194 [-]   : let __x28__ = (! (= Desc["Set"] absent))[0m
[32m+ 29195 [[32mT[0m/[32mT[0m[32m]: if __x28__ ... else ...[0m
[32m+ 29196 [-]   : { ... }[0m
[32m+ 29197 [-]   : app __x29__ = (SameValue Desc["Set"] current["Set"])[0m
[32m+ 29198 [-]   : __x28__ = (= __x29__ false)[0m
[32m+ 29199 [-]   : {}[0m
[32m+ 29200 [[32mT[0m/[32mT[0m[32m]: if __x28__ ... else ...[0m
[32m+ 29201 [-]   : { ... }[0m
[32m+ 29202 [-]   : app __x30__ = (WrapCompletion false)[0m
[32m+ 29203 [-]   : return __x30__[0m
[32m+ 29204 [-]   : {}[0m
[32m+ 29205 [-]   : let __x31__ = (! (= Desc["Get"] absent))[0m
[32m+ 29206 [[32mT[0m/[32mT[0m[32m]: if __x31__ ... else ...[0m
[32m+ 29207 [-]   : { ... }[0m
[32m+ 29208 [-]   : app __x32__ = (SameValue Desc["Get"] current["Get"])[0m
[32m+ 29209 [-]   : __x31__ = (= __x32__ false)[0m
[32m+ 29210 [-]   : {}[0m
[32m+ 29211 [[32mT[0m/[32mT[0m[32m]: if __x31__ ... else ...[0m
[32m+ 29212 [-]   : { ... }[0m
[32m+ 29213 [-]   : app __x33__ = (WrapCompletion false)[0m
[32m+ 29214 [-]   : return __x33__[0m
[32m+ 29215 [-]   : {}[0m
[32m+ 29216 [-]   : app __x34__ = (WrapCompletion true)[0m
[32m+ 29217 [-]   : return __x34__[0m
[32m+ 29218 [-]   : {}[0m
[32m+ 29219 [[32mT[0m/[32mT[0m[32m]: if (! (= O undefined)) ... else ...[0m
[32m+ 29220 [-]   : { ... }[0m
[32m+ 29221 [-]   : let __x35__ = (map-keys Desc)[0m
[32m+ 29222 [-]   : let __x36__ = 0i[0m
[32m+ 29223 [[32mT[0m/[32mT[0m[32m]: while (< __x36__ __x35__["length"]) { ... }[0m
[32m+ 29224 [-]   : { ... }[0m
[32m+ 29225 [-]   : let __x37__ = __x35__[__x36__][0m
[32m+ 29226 [-]   : O["SubMap"][P][__x37__] = Desc[__x37__][0m
[32m+ 29227 [-]   : __x36__ = (+ __x36__ 1i)[0m
[32m+ 29228 [-]   : {}[0m
[32m+ 29229 [-]   : app __x38__ = (WrapCompletion true)[0m
[32m+ 29230 [-]   : return __x38__[0m
